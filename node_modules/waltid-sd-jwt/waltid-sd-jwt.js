(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', 'jose', './kotlin-kotlin-stdlib.js', './kotlinx-serialization-kotlinx-serialization-core.js', './kotlinx-serialization-kotlinx-serialization-json.js', './korge-root-krypto.js', './cryptography-kotlin-cryptography-random.js', './kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('jose'), require('./kotlin-kotlin-stdlib.js'), require('./kotlinx-serialization-kotlinx-serialization-core.js'), require('./kotlinx-serialization-kotlinx-serialization-json.js'), require('./korge-root-krypto.js'), require('./cryptography-kotlin-cryptography-random.js'), require('./kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js'));
  else {
    if (typeof jose === 'undefined') {
      throw new Error("Error loading module 'id.walt:waltid-sd-jwt'. Its dependency 'jose' was not found. Please, check whether 'jose' is loaded prior to 'id.walt:waltid-sd-jwt'.");
    }
    if (typeof this['kotlin-kotlin-stdlib'] === 'undefined') {
      throw new Error("Error loading module 'id.walt:waltid-sd-jwt'. Its dependency 'kotlin-kotlin-stdlib' was not found. Please, check whether 'kotlin-kotlin-stdlib' is loaded prior to 'id.walt:waltid-sd-jwt'.");
    }
    if (typeof this['kotlinx-serialization-kotlinx-serialization-core'] === 'undefined') {
      throw new Error("Error loading module 'id.walt:waltid-sd-jwt'. Its dependency 'kotlinx-serialization-kotlinx-serialization-core' was not found. Please, check whether 'kotlinx-serialization-kotlinx-serialization-core' is loaded prior to 'id.walt:waltid-sd-jwt'.");
    }
    if (typeof this['kotlinx-serialization-kotlinx-serialization-json'] === 'undefined') {
      throw new Error("Error loading module 'id.walt:waltid-sd-jwt'. Its dependency 'kotlinx-serialization-kotlinx-serialization-json' was not found. Please, check whether 'kotlinx-serialization-kotlinx-serialization-json' is loaded prior to 'id.walt:waltid-sd-jwt'.");
    }
    if (typeof this['korge-root-krypto'] === 'undefined') {
      throw new Error("Error loading module 'id.walt:waltid-sd-jwt'. Its dependency 'korge-root-krypto' was not found. Please, check whether 'korge-root-krypto' is loaded prior to 'id.walt:waltid-sd-jwt'.");
    }
    if (typeof this['cryptography-kotlin-cryptography-random'] === 'undefined') {
      throw new Error("Error loading module 'id.walt:waltid-sd-jwt'. Its dependency 'cryptography-kotlin-cryptography-random' was not found. Please, check whether 'cryptography-kotlin-cryptography-random' is loaded prior to 'id.walt:waltid-sd-jwt'.");
    }
    if (typeof this['kotlinx.coroutines-kotlinx-coroutines-core-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'id.walt:waltid-sd-jwt'. Its dependency 'kotlinx.coroutines-kotlinx-coroutines-core-js-ir' was not found. Please, check whether 'kotlinx.coroutines-kotlinx-coroutines-core-js-ir' is loaded prior to 'id.walt:waltid-sd-jwt'.");
    }
    root['id.walt:waltid-sd-jwt'] = factory(typeof this['id.walt:waltid-sd-jwt'] === 'undefined' ? {} : this['id.walt:waltid-sd-jwt'], jose, this['kotlin-kotlin-stdlib'], this['kotlinx-serialization-kotlinx-serialization-core'], this['kotlinx-serialization-kotlinx-serialization-json'], this['korge-root-krypto'], this['cryptography-kotlin-cryptography-random'], this['kotlinx.coroutines-kotlinx-coroutines-core-js-ir']);
  }
}(this, function (_, jose, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_com_soywiz_korlibs_krypto_krypto, kotlin_dev_whyoleg_cryptography_cryptography_random, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var protoOf = kotlin_kotlin.$_$.s7;
  var VOID = kotlin_kotlin.$_$.c;
  var interfaceMeta = kotlin_kotlin.$_$.b7;
  var setMetadataFor = kotlin_kotlin.$_$.t7;
  var createSimpleEnumSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q1;
  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.d;
  var lazy = kotlin_kotlin.$_$.ia;
  var println = kotlin_kotlin.$_$.k6;
  var get_jsonPrimitive = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.m;
  var get_jsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.l;
  var JsonObject = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.f;
  var Exception_init_$Create$ = kotlin_kotlin.$_$.x;
  var objectMeta = kotlin_kotlin.$_$.r7;
  var THROW_IAE = kotlin_kotlin.$_$.q9;
  var Unit_instance = kotlin_kotlin.$_$.o3;
  var Enum = kotlin_kotlin.$_$.i9;
  var defineProp = kotlin_kotlin.$_$.u6;
  var classMeta = kotlin_kotlin.$_$.t6;
  var get_boolean = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.h;
  var JsonNull = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.d;
  var PluginGeneratedSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p1;
  var BooleanSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l;
  var get_nullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q;
  var UnknownFieldException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c;
  var typeParametersSerializers = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k1;
  var GeneratedSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.l1;
  var throwMissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.s1;
  var objectCreate = kotlin_kotlin.$_$.q7;
  var JsonObjectBuilder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.e;
  var put = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.p;
  var getBooleanHashCode = kotlin_kotlin.$_$.x6;
  var hashCode = kotlin_kotlin.$_$.a7;
  var THROW_CCE = kotlin_kotlin.$_$.p9;
  var equals = kotlin_kotlin.$_$.v6;
  var CoroutineImpl = kotlin_kotlin.$_$.i6;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.u5;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.m1;
  var Regex_init_$Create$ = kotlin_kotlin.$_$.t;
  var MatchNamedGroupCollection = kotlin_kotlin.$_$.h8;
  var isInterface = kotlin_kotlin.$_$.i7;
  var charArrayOf = kotlin_kotlin.$_$.o6;
  var trim = kotlin_kotlin.$_$.d9;
  var split = kotlin_kotlin.$_$.r8;
  var toSet = kotlin_kotlin.$_$.r5;
  var emptySet = kotlin_kotlin.$_$.o4;
  var ensureNotNull = kotlin_kotlin.$_$.ea;
  var Default_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var Base64_getInstance = kotlin_com_soywiz_korlibs_krypto_krypto.$_$.a;
  var decodeToString = kotlin_kotlin.$_$.j8;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.x3;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.g;
  var get_contentOrNull = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.i;
  var listOf = kotlin_kotlin.$_$.z4;
  var plus = kotlin_kotlin.$_$.g5;
  var emptyList = kotlin_kotlin.$_$.m4;
  var joinToString = kotlin_kotlin.$_$.t4;
  var substringBefore = kotlin_kotlin.$_$.t8;
  var substringAfter = kotlin_kotlin.$_$.s8;
  var Pair = kotlin_kotlin.$_$.n9;
  var LinkedHashMap_init_$Create$ = kotlin_kotlin.$_$.o;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.h;
  var mapCapacity = kotlin_kotlin.$_$.b5;
  var LinkedHashMap_init_$Create$_0 = kotlin_kotlin.$_$.n;
  var charSequenceLength = kotlin_kotlin.$_$.r6;
  var listOf_0 = kotlin_kotlin.$_$.a5;
  var StringSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n;
  var LinkedHashMapSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.n1;
  var get_jsonArray = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.k;
  var coerceAtLeast = kotlin_kotlin.$_$.a8;
  var emptyMap = kotlin_kotlin.$_$.n4;
  var plus_0 = kotlin_kotlin.$_$.d5;
  var get_int = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.j;
  var IntSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.m;
  var put_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.o;
  var put_1 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.n;
  var Map = kotlin_kotlin.$_$.t3;
  var encodeToByteArray = kotlin_kotlin.$_$.k8;
  var sha256 = kotlin_com_soywiz_korlibs_krypto_krypto.$_$.c;
  var Default_getInstance_0 = kotlin_dev_whyoleg_cryptography_cryptography_random.$_$.a;
  var JsonArrayBuilder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.b;
  var add = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.g;
  var toMutableMap = kotlin_kotlin.$_$.q5;
  var filterNotNull = kotlin_kotlin.$_$.p4;
  var SecureRandom_getInstance = kotlin_com_soywiz_korlibs_krypto_krypto.$_$.b;
  var numberToInt = kotlin_kotlin.$_$.o7;
  var JsonArray = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.c;
  var addAll = kotlin_kotlin.$_$.v3;
  var getStringHashCode = kotlin_kotlin.$_$.z6;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.b;
  var GlobalScope_instance = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.a;
  var promise = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.c;
  var copyToArray = kotlin_kotlin.$_$.l4;
  var joinToString_0 = kotlin_kotlin.$_$.u4;
  var plus_1 = kotlin_kotlin.$_$.e5;
  var toList = kotlin_kotlin.$_$.o5;
  var Companion_instance = kotlin_kotlin.$_$.j3;
  var _Result___init__impl__xyqfz8 = kotlin_kotlin.$_$.r1;
  var intercepted = kotlin_kotlin.$_$.w5;
  var SafeContinuation_init_$Create$ = kotlin_kotlin.$_$.s;
  var returnIfSuspended = kotlin_kotlin.$_$.e;
  //endregion
  //region block: pre-declaration
  function sign$default(payload, keyID, $completion, $super) {
    keyID = keyID === VOID ? null : keyID;
    return $super === VOID ? this.a1e(payload, keyID, $completion) : $super.a1e.call(this, payload, keyID, $completion);
  }
  setMetadataFor(AsyncJWTCryptoProvider, 'AsyncJWTCryptoProvider', interfaceMeta, VOID, VOID, VOID, VOID, VOID, [2, 1]);
  setMetadataFor(Companion, 'Companion', objectMeta);
  setMetadataFor(DecoyMode, 'DecoyMode', classMeta, Enum, VOID, VOID, VOID, {0: Companion_getInstance});
  function sign(payload, keyID, typ, $super) {
    keyID = keyID === VOID ? null : keyID;
    typ = typ === VOID ? 'JWT' : typ;
    return this.i1e(payload, keyID, typ);
  }
  setMetadataFor(JWTCryptoProvider, 'JWTCryptoProvider', interfaceMeta);
  setMetadataFor(Companion_0, 'Companion', objectMeta);
  setMetadataFor($serializer, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(SDField, 'SDField', classMeta, VOID, VOID, VOID, VOID, {0: $serializer_getInstance});
  setMetadataFor($signAsyncCOROUTINE$1, '$signAsyncCOROUTINE$1', classMeta, CoroutineImpl);
  setMetadataFor(Companion_1, 'Companion', objectMeta, VOID, VOID, VOID, VOID, VOID, [2, 4]);
  setMetadataFor($verifyAsyncCOROUTINE$0, '$verifyAsyncCOROUTINE$0', classMeta, CoroutineImpl);
  setMetadataFor(SDJwt, 'SDJwt', classMeta, VOID, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(Companion_2, 'Companion', objectMeta);
  setMetadataFor($serializer_0, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(SDMap, 'SDMap', classMeta, VOID, [Map], VOID, VOID, {0: $serializer_getInstance_0});
  setMetadataFor(Companion_3, 'Companion', objectMeta);
  setMetadataFor(SDPayload, 'SDPayload', classMeta);
  setMetadataFor(Companion_4, 'Companion', objectMeta);
  setMetadataFor(SDisclosure, 'SDisclosure', classMeta);
  setMetadataFor(JwtVerificationResult, 'JwtVerificationResult', classMeta);
  setMetadataFor(VerificationResult, 'VerificationResult', classMeta);
  setMetadataFor(JSAsyncJWTCryptoProvider, 'JSAsyncJWTCryptoProvider', interfaceMeta, VOID, [AsyncJWTCryptoProvider], VOID, VOID, VOID, [2, 1]);
  setMetadataFor(SDJwtJS$Companion$verifyAndParseAsync$slambda, 'SDJwtJS$Companion$verifyAndParseAsync$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(SDJwtJS$Companion$signAsync$slambda, 'SDJwtJS$Companion$signAsync$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(Companion_5, 'Companion', objectMeta);
  setMetadataFor(SDJwtJS$verifyAsyncJs$slambda, 'SDJwtJS$verifyAsyncJs$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(SDJwtJS$presentAllAsync$slambda, 'SDJwtJS$presentAllAsync$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(SDJwtJS$presentAsync$slambda, 'SDJwtJS$presentAsync$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(SDJwtJS, 'SDJwtJS', classMeta, SDJwt, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(SDMapBuilder, 'SDMapBuilderJS', classMeta, VOID, VOID, SDMapBuilder);
  setMetadataFor(SDPayloadBuilder, 'SDPayloadBuilder', classMeta);
  setMetadataFor(SimpleAsyncJWTCryptoProvider$signAsync$slambda, 'SimpleAsyncJWTCryptoProvider$signAsync$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor(SimpleAsyncJWTCryptoProvider$verifyAsync$slambda, 'SimpleAsyncJWTCryptoProvider$verifyAsync$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, VOID, [1]);
  setMetadataFor($signCOROUTINE$2, '$signCOROUTINE$2', classMeta, CoroutineImpl);
  setMetadataFor($verifyCOROUTINE$3, '$verifyCOROUTINE$3', classMeta, CoroutineImpl);
  setMetadataFor(SimpleAsyncJWTCryptoProvider, 'SimpleAsyncJWTCryptoProvider', classMeta, VOID, [JSAsyncJWTCryptoProvider], VOID, VOID, VOID, [2, 1]);
  //endregion
  function AsyncJWTCryptoProvider() {
  }
  function _get_$cachedSerializer__te6jhj($this) {
    return $this.d1e_1.v1();
  }
  function DecoyMode$Companion$_anonymous__jwwj4w() {
    return createSimpleEnumSerializer('id.walt.sdjwt.DecoyMode', values());
  }
  var DecoyMode_NONE_instance;
  var DecoyMode_FIXED_instance;
  var DecoyMode_RANDOM_instance;
  function Companion() {
    Companion_instance_0 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.d1e_1 = lazy(tmp_0, DecoyMode$Companion$_anonymous__jwwj4w);
  }
  protoOf(Companion).e1e = function (json) {
    println('Parsing DecoyMode from ' + json);
    var tmp;
    if (json instanceof JsonObject) {
      var tmp0_safe_receiver = get_jsonObject(json).e8('name');
      var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
      tmp = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.zw();
    } else {
      tmp = get_jsonPrimitive(json).zw();
    }
    var tmp2_safe_receiver = tmp;
    var tmp_0;
    if (tmp2_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'id.walt.sdjwt.Companion.fromJSON.<anonymous>' call
      tmp_0 = valueOf(tmp2_safe_receiver);
    }
    var tmp3_elvis_lhs = tmp_0;
    var tmp_1;
    if (tmp3_elvis_lhs == null) {
      throw Exception_init_$Create$('Error parsing DecoyMode from JSON value');
    } else {
      tmp_1 = tmp3_elvis_lhs;
    }
    return tmp_1;
  };
  protoOf(Companion).f1e = function () {
    return _get_$cachedSerializer__te6jhj(this);
  };
  var Companion_instance_0;
  function Companion_getInstance() {
    DecoyMode_initEntries();
    if (Companion_instance_0 == null)
      new Companion();
    return Companion_instance_0;
  }
  function values() {
    return [DecoyMode_NONE_getInstance(), DecoyMode_FIXED_getInstance(), DecoyMode_RANDOM_getInstance()];
  }
  function valueOf(value) {
    switch (value) {
      case 'NONE':
        return DecoyMode_NONE_getInstance();
      case 'FIXED':
        return DecoyMode_FIXED_getInstance();
      case 'RANDOM':
        return DecoyMode_RANDOM_getInstance();
      default:
        DecoyMode_initEntries();
        THROW_IAE('No enum constant value.');
        break;
    }
  }
  var DecoyMode_entriesInitialized;
  function DecoyMode_initEntries() {
    if (DecoyMode_entriesInitialized)
      return Unit_instance;
    DecoyMode_entriesInitialized = true;
    DecoyMode_NONE_instance = new DecoyMode('NONE', 0);
    DecoyMode_FIXED_instance = new DecoyMode('FIXED', 1);
    DecoyMode_RANDOM_instance = new DecoyMode('RANDOM', 2);
    Companion_getInstance();
  }
  function DecoyMode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function DecoyMode_NONE_getInstance() {
    DecoyMode_initEntries();
    return DecoyMode_NONE_instance;
  }
  function DecoyMode_FIXED_getInstance() {
    DecoyMode_initEntries();
    return DecoyMode_FIXED_instance;
  }
  function DecoyMode_RANDOM_getInstance() {
    DecoyMode_initEntries();
    return DecoyMode_RANDOM_instance;
  }
  function JWTCryptoProvider() {
  }
  function Companion_0() {
  }
  protoOf(Companion_0).e1e = function (json) {
    println('Parsing SDField from ' + json);
    var tmp0_safe_receiver = get_jsonObject(json).e8('sd');
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
    var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : get_boolean(tmp1_safe_receiver);
    var tmp;
    if (tmp2_elvis_lhs == null) {
      throw Exception_init_$Create$('Error parsing SDField.sd from JSON element');
    } else {
      tmp = tmp2_elvis_lhs;
    }
    var tmp_0 = tmp;
    var tmp3_safe_receiver = get_jsonObject(json).e8('children');
    var tmp_1;
    if (tmp3_safe_receiver == null) {
      tmp_1 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'id.walt.sdjwt.Companion.fromJSON.<anonymous>' call
      var tmp_2;
      if (tmp3_safe_receiver instanceof JsonObject) {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'id.walt.sdjwt.Companion.fromJSON.<anonymous>.<anonymous>' call
        var it = get_jsonObject(tmp3_safe_receiver);
        tmp_2 = Companion_getInstance_2().k1e(it);
      } else {
        if (tmp3_safe_receiver instanceof JsonNull) {
          tmp_2 = null;
        } else {
          throw Exception_init_$Create$('Error parsing SDField.children from JSON element');
        }
      }
      tmp_1 = tmp_2;
    }
    return new SDField(tmp_0, tmp_1);
  };
  var Companion_instance_1;
  function Companion_getInstance_0() {
    return Companion_instance_1;
  }
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('id.walt.sdjwt.SDField', this, 2);
    tmp0_serialDesc.cp('sd', false);
    tmp0_serialDesc.cp('children', true);
    this.l1e_1 = tmp0_serialDesc;
  }
  protoOf($serializer).fi = function () {
    return this.l1e_1;
  };
  protoOf($serializer).rp = function () {
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return [BooleanSerializer_getInstance(), get_nullable($serializer_getInstance_0())];
  };
  protoOf($serializer).gi = function (decoder) {
    var tmp0_desc = this.l1e_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = false;
    var tmp5_local1 = null;
    var tmp6_input = decoder.rk(tmp0_desc);
    if (tmp6_input.gl()) {
      tmp4_local0 = tmp6_input.tk(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp6_input.el(tmp0_desc, 1, $serializer_getInstance_0(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp6_input.hl(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp6_input.tk(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp6_input.el(tmp0_desc, 1, $serializer_getInstance_0(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp6_input.sk(tmp0_desc);
    return SDField_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, null);
  };
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function SDField_init_$Init$(seen1, sd, children, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1))) {
      throwMissingFieldException(seen1, 1, $serializer_getInstance().l1e_1);
    }
    $this.sd = sd;
    if (0 === (seen1 & 2))
      $this.children = null;
    else
      $this.children = children;
    return $this;
  }
  function SDField_init_$Create$(seen1, sd, children, serializationConstructorMarker) {
    return SDField_init_$Init$(seen1, sd, children, serializationConstructorMarker, objectCreate(protoOf(SDField)));
  }
  function SDField(sd, children) {
    children = children === VOID ? null : children;
    this.sd = sd;
    this.children = children;
  }
  protoOf(SDField).m1e = function () {
    return this.sd;
  };
  protoOf(SDField).n1e = function () {
    return this.children;
  };
  protoOf(SDField).o1e = function () {
    // Inline function 'kotlinx.serialization.json.buildJsonObject' call
    // Inline function 'kotlin.contracts.contract' call
    var builder = new JsonObjectBuilder();
    // Inline function 'id.walt.sdjwt.SDField.toJSON.<anonymous>' call
    put(builder, 'sd', this.sd);
    var tmp0_safe_receiver = this.children;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'id.walt.sdjwt.SDField.toJSON.<anonymous>.<anonymous>' call
      builder.jx('children', tmp0_safe_receiver.o1e());
    }
    return builder.kn();
  };
  protoOf(SDField).od = function () {
    return this.sd;
  };
  protoOf(SDField).pd = function () {
    return this.children;
  };
  protoOf(SDField).s1e = function (sd, children) {
    return new SDField(sd, children);
  };
  protoOf(SDField).copy = function (sd, children, $super) {
    sd = sd === VOID ? this.sd : sd;
    children = children === VOID ? this.children : children;
    return this.s1e(sd, children);
  };
  protoOf(SDField).toString = function () {
    return 'SDField(sd=' + this.sd + ', children=' + this.children + ')';
  };
  protoOf(SDField).hashCode = function () {
    var result = getBooleanHashCode(this.sd);
    result = imul(result, 31) + (this.children == null ? 0 : hashCode(this.children)) | 0;
    return result;
  };
  protoOf(SDField).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SDField))
      return false;
    var tmp0_other_with_cast = other instanceof SDField ? other : THROW_CCE();
    if (!(this.sd === tmp0_other_with_cast.sd))
      return false;
    if (!equals(this.children, tmp0_other_with_cast.children))
      return false;
    return true;
  };
  function $signAsyncCOROUTINE$1(_this__u8e3s4, sdPayload, jwtCryptoProvider, keyID, withHolderJwt, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.b1f_1 = _this__u8e3s4;
    this.c1f_1 = sdPayload;
    this.d1f_1 = jwtCryptoProvider;
    this.e1f_1 = keyID;
    this.f1f_1 = withHolderJwt;
  }
  protoOf($signAsyncCOROUTINE$1).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        switch (tmp) {
          case 0:
            this.wa_1 = 2;
            this.va_1 = 1;
            suspendResult = this.d1f_1.a1e(this.c1f_1.undisclosedPayload, this.e1f_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            return this.b1f_1.createFromSignedJwt(ARGUMENT, this.c1f_1, this.f1f_1);
          case 2:
            throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.wa_1 === 2) {
          throw e;
        } else {
          this.va_1 = this.wa_1;
          this.ya_1 = e;
        }
      }
     while (true);
  };
  protoOf($signAsyncCOROUTINE$1)['<set-state>'] = protoOf($signAsyncCOROUTINE$1).eb;
  protoOf($signAsyncCOROUTINE$1)['<get-state>'] = protoOf($signAsyncCOROUTINE$1).fb;
  protoOf($signAsyncCOROUTINE$1)['<set-exceptionState>'] = protoOf($signAsyncCOROUTINE$1).gb;
  protoOf($signAsyncCOROUTINE$1)['<get-exceptionState>'] = protoOf($signAsyncCOROUTINE$1).hb;
  protoOf($signAsyncCOROUTINE$1)['<set-result>'] = protoOf($signAsyncCOROUTINE$1).ib;
  protoOf($signAsyncCOROUTINE$1)['<get-result>'] = protoOf($signAsyncCOROUTINE$1).jb;
  protoOf($signAsyncCOROUTINE$1)['<set-exception>'] = protoOf($signAsyncCOROUTINE$1).kb;
  protoOf($signAsyncCOROUTINE$1)['<get-exception>'] = protoOf($signAsyncCOROUTINE$1).lb;
  protoOf($signAsyncCOROUTINE$1)['<set-finallyPath>'] = protoOf($signAsyncCOROUTINE$1).mb;
  protoOf($signAsyncCOROUTINE$1)['<get-finallyPath>'] = protoOf($signAsyncCOROUTINE$1).nb;
  protoOf($signAsyncCOROUTINE$1)['<get-context>'] = protoOf($signAsyncCOROUTINE$1).u5;
  function SDJwt_init_$Init$(sdJwt, $this) {
    SDJwt.call($this, sdJwt.jwt, sdJwt.header, sdJwt.sdPayload, sdJwt.holderJwt, sdJwt.isPresentation);
    return $this;
  }
  function Companion_1() {
    Companion_instance_2 = this;
    this.DIGESTS_KEY = '_sd';
    this.SEPARATOR = _Char___init__impl__6a9atx(126);
    this.SEPARATOR_STR = '~';
    this.SD_JWT_PATTERN = '^(?<sdjwt>(?<header>[A-Za-z0-9-_]+)\\.(?<body>[A-Za-z0-9-_]+)\\.(?<signature>[A-Za-z0-9-_]+))(?<disclosures>(~([A-Za-z0-9-_]+))+)?(~(?<holderjwt>([A-Za-z0-9-_]+)\\.([A-Za-z0-9-_]+)\\.([A-Za-z0-9-_]+))?)?$';
  }
  protoOf(Companion_1).g1f = function () {
    return this.DIGESTS_KEY;
  };
  protoOf(Companion_1).h1f = function () {
    return this.SEPARATOR;
  };
  protoOf(Companion_1).i1f = function () {
    return this.SEPARATOR_STR;
  };
  protoOf(Companion_1).j1f = function () {
    return this.SD_JWT_PATTERN;
  };
  protoOf(Companion_1).parse = function (sdJwt) {
    var tmp0_elvis_lhs = Regex_init_$Create$('^(?<sdjwt>(?<header>[A-Za-z0-9-_]+)\\.(?<body>[A-Za-z0-9-_]+)\\.(?<signature>[A-Za-z0-9-_]+))(?<disclosures>(~([A-Za-z0-9-_]+))+)?(~(?<holderjwt>([A-Za-z0-9-_]+)\\.([A-Za-z0-9-_]+)\\.([A-Za-z0-9-_]+))?)?$').x7(sdJwt);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw Exception_init_$Create$('Invalid SD-JWT format');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var matchResult = tmp;
    var tmp_0 = matchResult.m8();
    var matchedGroups = isInterface(tmp_0, MatchNamedGroupCollection) ? tmp_0 : THROW_CCE();
    var tmp1_safe_receiver = matchedGroups.e8('disclosures');
    var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.y7_1;
    var tmp3_safe_receiver = tmp2_safe_receiver == null ? null : trim(tmp2_safe_receiver, charArrayOf([_Char___init__impl__6a9atx(126)]));
    var tmp4_safe_receiver = tmp3_safe_receiver == null ? null : split(tmp3_safe_receiver, charArrayOf([_Char___init__impl__6a9atx(126)]));
    var tmp5_elvis_lhs = tmp4_safe_receiver == null ? null : toSet(tmp4_safe_receiver);
    var tmp_1;
    if (tmp5_elvis_lhs == null) {
      // Inline function 'kotlin.collections.setOf' call
      tmp_1 = emptySet();
    } else {
      tmp_1 = tmp5_elvis_lhs;
    }
    var disclosures = tmp_1;
    var tmp_2 = ensureNotNull(matchedGroups.e8('sdjwt')).y7_1;
    var tmp_3 = get_jsonObject(Default_getInstance().tv(decodeToString(Base64_getInstance().n15(ensureNotNull(matchedGroups.e8('header')).y7_1, true))));
    var tmp_4 = Companion_instance_4.k1f(ensureNotNull(matchedGroups.e8('body')).y7_1, disclosures);
    var tmp6_safe_receiver = matchedGroups.e8('holderjwt');
    return new SDJwt(tmp_2, tmp_3, tmp_4, tmp6_safe_receiver == null ? null : tmp6_safe_receiver.y7_1);
  };
  protoOf(Companion_1).verifyAndParse = function (sdJwt, jwtCryptoProvider) {
    return this.parse(sdJwt).verify(jwtCryptoProvider);
  };
  protoOf(Companion_1).l1f = function (sdJwt, jwtCryptoProvider, $completion) {
    return this.parse(sdJwt).m1f(jwtCryptoProvider, $completion);
  };
  protoOf(Companion_1).n1f = function (signedJwt, sdPayload, withHolderJwt) {
    var sdJwt = this.parse(signedJwt);
    return new SDJwt(sdJwt.jwt, sdJwt.header, sdPayload, withHolderJwt);
  };
  protoOf(Companion_1).createFromSignedJwt = function (signedJwt, sdPayload, withHolderJwt, $super) {
    withHolderJwt = withHolderJwt === VOID ? null : withHolderJwt;
    return this.n1f(signedJwt, sdPayload, withHolderJwt);
  };
  protoOf(Companion_1).o1f = function (sdPayload, jwtCryptoProvider, keyID, withHolderJwt, typ) {
    return this.createFromSignedJwt(jwtCryptoProvider.sign(sdPayload.undisclosedPayload, keyID, typ), sdPayload, withHolderJwt);
  };
  protoOf(Companion_1).sign = function (sdPayload, jwtCryptoProvider, keyID, withHolderJwt, typ, $super) {
    keyID = keyID === VOID ? null : keyID;
    withHolderJwt = withHolderJwt === VOID ? null : withHolderJwt;
    typ = typ === VOID ? 'JWT' : typ;
    return this.o1f(sdPayload, jwtCryptoProvider, keyID, withHolderJwt, typ);
  };
  protoOf(Companion_1).p1f = function (sdPayload, jwtCryptoProvider, keyID, withHolderJwt, $completion) {
    var tmp = new $signAsyncCOROUTINE$1(this, sdPayload, jwtCryptoProvider, keyID, withHolderJwt, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(Companion_1).q1f = function (sdPayload, jwtCryptoProvider, keyID, withHolderJwt, $completion, $super) {
    keyID = keyID === VOID ? null : keyID;
    withHolderJwt = withHolderJwt === VOID ? null : withHolderJwt;
    return $super === VOID ? this.p1f(sdPayload, jwtCryptoProvider, keyID, withHolderJwt, $completion) : $super.p1f.call(this, sdPayload, jwtCryptoProvider, keyID, withHolderJwt, $completion);
  };
  protoOf(Companion_1).isSDJwt = function (value) {
    return Regex_init_$Create$('^(?<sdjwt>(?<header>[A-Za-z0-9-_]+)\\.(?<body>[A-Za-z0-9-_]+)\\.(?<signature>[A-Za-z0-9-_]+))(?<disclosures>(~([A-Za-z0-9-_]+))+)?(~(?<holderjwt>([A-Za-z0-9-_]+)\\.([A-Za-z0-9-_]+)\\.([A-Za-z0-9-_]+))?)?$').w7(value);
  };
  var Companion_instance_2;
  function Companion_getInstance_1() {
    if (Companion_instance_2 == null)
      new Companion_1();
    return Companion_instance_2;
  }
  function $verifyAsyncCOROUTINE$0(_this__u8e3s4, jwtCryptoProvider, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.z1f_1 = _this__u8e3s4;
    this.a1g_1 = jwtCryptoProvider;
  }
  protoOf($verifyAsyncCOROUTINE$0).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        switch (tmp) {
          case 0:
            this.wa_1 = 2;
            this.va_1 = 1;
            suspendResult = this.a1g_1.c1e(this.z1f_1.jwt, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var it = suspendResult;
            return new VerificationResult(this.z1f_1, it.verified, this.z1f_1.sdPayload.verifyDisclosures(), it.message);
          case 2:
            throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.wa_1 === 2) {
          throw e;
        } else {
          this.va_1 = this.wa_1;
          this.ya_1 = e;
        }
      }
     while (true);
  };
  protoOf($verifyAsyncCOROUTINE$0)['<set-state>'] = protoOf($verifyAsyncCOROUTINE$0).eb;
  protoOf($verifyAsyncCOROUTINE$0)['<get-state>'] = protoOf($verifyAsyncCOROUTINE$0).fb;
  protoOf($verifyAsyncCOROUTINE$0)['<set-exceptionState>'] = protoOf($verifyAsyncCOROUTINE$0).gb;
  protoOf($verifyAsyncCOROUTINE$0)['<get-exceptionState>'] = protoOf($verifyAsyncCOROUTINE$0).hb;
  protoOf($verifyAsyncCOROUTINE$0)['<set-result>'] = protoOf($verifyAsyncCOROUTINE$0).ib;
  protoOf($verifyAsyncCOROUTINE$0)['<get-result>'] = protoOf($verifyAsyncCOROUTINE$0).jb;
  protoOf($verifyAsyncCOROUTINE$0)['<set-exception>'] = protoOf($verifyAsyncCOROUTINE$0).kb;
  protoOf($verifyAsyncCOROUTINE$0)['<get-exception>'] = protoOf($verifyAsyncCOROUTINE$0).lb;
  protoOf($verifyAsyncCOROUTINE$0)['<set-finallyPath>'] = protoOf($verifyAsyncCOROUTINE$0).mb;
  protoOf($verifyAsyncCOROUTINE$0)['<get-finallyPath>'] = protoOf($verifyAsyncCOROUTINE$0).nb;
  protoOf($verifyAsyncCOROUTINE$0)['<get-context>'] = protoOf($verifyAsyncCOROUTINE$0).u5;
  function SDJwt(jwt, header, sdPayload, holderJwt, isPresentation) {
    Companion_getInstance_1();
    holderJwt = holderJwt === VOID ? null : holderJwt;
    isPresentation = isPresentation === VOID ? false : isPresentation;
    this.jwt = jwt;
    this.header = header;
    this.sdPayload = sdPayload;
    this.holderJwt = holderJwt;
    this.isPresentation = isPresentation;
  }
  protoOf(SDJwt).b1g = function () {
    return this.jwt;
  };
  protoOf(SDJwt).c1g = function () {
    return this.header;
  };
  protoOf(SDJwt).d1g = function () {
    return this.sdPayload;
  };
  protoOf(SDJwt).e1g = function () {
    return this.holderJwt;
  };
  protoOf(SDJwt).f1g = function () {
    return this.isPresentation;
  };
  protoOf(SDJwt).g1g = function () {
    // Inline function 'kotlin.collections.map' call
    var this_0 = this.sdPayload.sDisclosures;
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
    var tmp0_iterator = this_0.r();
    while (tmp0_iterator.s()) {
      var item = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.SDJwt.<get-disclosures>.<anonymous>' call
      var tmp$ret$0 = item.disclosure;
      destination.o(tmp$ret$0);
    }
    return toSet(destination);
  };
  protoOf(SDJwt).h1g = function () {
    return this.sdPayload.sDisclosures;
  };
  protoOf(SDJwt).i1g = function () {
    return this.sdPayload.undisclosedPayload;
  };
  protoOf(SDJwt).j1g = function () {
    return this.sdPayload.fullPayload;
  };
  protoOf(SDJwt).k1g = function () {
    return this.sdPayload.digestedDisclosures;
  };
  protoOf(SDJwt).l1g = function () {
    return this.sdPayload.sdMap;
  };
  protoOf(SDJwt).m1g = function () {
    var tmp0_safe_receiver = this.header.e8('alg');
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
    return tmp1_safe_receiver == null ? null : get_contentOrNull(tmp1_safe_receiver);
  };
  protoOf(SDJwt).n1g = function () {
    var tmp0_safe_receiver = this.header.e8('kid');
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
    return tmp1_safe_receiver == null ? null : get_contentOrNull(tmp1_safe_receiver);
  };
  protoOf(SDJwt).o1g = function () {
    var tmp0_safe_receiver = this.header.e8('jwk');
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
    return tmp1_safe_receiver == null ? null : get_contentOrNull(tmp1_safe_receiver);
  };
  protoOf(SDJwt).toString = function () {
    return this.toFormattedString(this.isPresentation);
  };
  protoOf(SDJwt).toFormattedString = function (formatForPresentation) {
    var tmp = plus(listOf(this.jwt), this.zzz_unused_disclosures);
    var tmp0_safe_receiver = this.holderJwt;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'id.walt.sdjwt.SDJwt.toString.<anonymous>' call
      tmp_0 = listOf(tmp0_safe_receiver);
    }
    var tmp1_elvis_lhs = tmp_0;
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      var tmp_2;
      if (formatForPresentation) {
        tmp_2 = listOf('');
      } else {
        // Inline function 'kotlin.collections.listOf' call
        tmp_2 = emptyList();
      }
      tmp_1 = tmp_2;
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    return joinToString(plus(tmp, tmp_1), '~');
  };
  protoOf(SDJwt).p1g = function (sdMap, withHolderJwt) {
    var tmp;
    if (sdMap == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'id.walt.sdjwt.SDJwt.present.<anonymous>' call
      tmp = this.sdPayload.withSelectiveDisclosures(sdMap);
    }
    var tmp1_elvis_lhs = tmp;
    var tmp_0 = tmp1_elvis_lhs == null ? this.sdPayload.withoutDisclosures() : tmp1_elvis_lhs;
    return new SDJwt(this.jwt, this.header, tmp_0, withHolderJwt == null ? this.holderJwt : withHolderJwt, true);
  };
  protoOf(SDJwt).present = function (sdMap, withHolderJwt, $super) {
    withHolderJwt = withHolderJwt === VOID ? null : withHolderJwt;
    return this.p1g(sdMap, withHolderJwt);
  };
  protoOf(SDJwt).q1g = function (discloseAll, withHolderJwt) {
    var tmp;
    if (discloseAll) {
      tmp = this.sdPayload;
    } else {
      tmp = this.sdPayload.withoutDisclosures();
    }
    var tmp_0 = tmp;
    return new SDJwt(this.jwt, this.header, tmp_0, withHolderJwt == null ? this.holderJwt : withHolderJwt, true);
  };
  protoOf(SDJwt).presentAll = function (discloseAll, withHolderJwt, $super) {
    withHolderJwt = withHolderJwt === VOID ? null : withHolderJwt;
    return this.q1g(discloseAll, withHolderJwt);
  };
  protoOf(SDJwt).verify = function (jwtCryptoProvider) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'id.walt.sdjwt.SDJwt.verify.<anonymous>' call
    var it = jwtCryptoProvider.verify(this.jwt);
    return new VerificationResult(this, it.verified, this.sdPayload.verifyDisclosures(), it.message);
  };
  protoOf(SDJwt).m1f = function (jwtCryptoProvider, $completion) {
    var tmp = new $verifyAsyncCOROUTINE$0(this, jwtCryptoProvider, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  function doGenerateSDMap($this, jsonPaths, decoyMode, decoys, sdPaths, parent) {
    // Inline function 'kotlin.collections.mapValues' call
    // Inline function 'kotlin.collections.groupBy' call
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(jsonPaths, 10));
    var tmp0_iterator = jsonPaths.r();
    while (tmp0_iterator.s()) {
      var item = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.Companion.doGenerateSDMap.<anonymous>' call
      var tmp$ret$0 = new Pair(substringBefore(item, '.'), substringAfter(item, '.', ''));
      destination.o(tmp$ret$0);
    }
    // Inline function 'kotlin.collections.groupByTo' call
    var destination_0 = LinkedHashMap_init_$Create$();
    var tmp0_iterator_0 = destination.r();
    while (tmp0_iterator_0.s()) {
      var element = tmp0_iterator_0.t();
      // Inline function 'id.walt.sdjwt.Companion.doGenerateSDMap.<anonymous>' call
      var key = element.md_1;
      // Inline function 'kotlin.collections.getOrPut' call
      var value = destination_0.b2(key);
      var tmp;
      if (value == null) {
        // Inline function 'kotlin.collections.groupByTo.<anonymous>' call
        var answer = ArrayList_init_$Create$_0();
        destination_0.r1(key, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      var list = tmp;
      // Inline function 'id.walt.sdjwt.Companion.doGenerateSDMap.<anonymous>' call
      var tmp$ret$6 = element.nd_1;
      list.o(tmp$ret$6);
    }
    // Inline function 'kotlin.collections.mapValuesTo' call
    var destination_1 = LinkedHashMap_init_$Create$_0(mapCapacity(destination_0.u()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator_1 = destination_0.t1().r();
    while (tmp0_iterator_1.s()) {
      var element_0 = tmp0_iterator_1.t();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp_0 = element_0.u1();
      // Inline function 'id.walt.sdjwt.Companion.doGenerateSDMap.<anonymous>' call
      // Inline function 'kotlin.collections.filterNot' call
      // Inline function 'kotlin.collections.filterNotTo' call
      var this_0 = element_0.v1();
      var destination_2 = ArrayList_init_$Create$_0();
      var tmp0_iterator_2 = this_0.r();
      while (tmp0_iterator_2.s()) {
        var element_1 = tmp0_iterator_2.t();
        // Inline function 'id.walt.sdjwt.Companion.doGenerateSDMap.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.text.isEmpty' call
        if (!(charSequenceLength(element_1) === 0)) {
          destination_2.o(element_1);
        }
      }
      destination_1.r1(tmp_0, destination_2);
    }
    var pathMap = destination_1;
    // Inline function 'kotlin.collections.mapValues' call
    // Inline function 'kotlin.collections.mapValuesTo' call
    var destination_3 = LinkedHashMap_init_$Create$_0(mapCapacity(pathMap.u()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator_3 = pathMap.t1().r();
    while (tmp0_iterator_3.s()) {
      var element_2 = tmp0_iterator_3.t();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp_1 = element_2.u1();
      // Inline function 'id.walt.sdjwt.Companion.doGenerateSDMap.<anonymous>' call
      // Inline function 'kotlin.collections.filter' call
      // Inline function 'kotlin.collections.filterTo' call
      var this_1 = listOf_0([parent, element_2.u1()]);
      var destination_4 = ArrayList_init_$Create$_0();
      var tmp0_iterator_4 = this_1.r();
      while (tmp0_iterator_4.s()) {
        var element_3 = tmp0_iterator_4.t();
        // Inline function 'id.walt.sdjwt.Companion.doGenerateSDMap.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.text.isNotEmpty' call
        if (charSequenceLength(element_3) > 0) {
          destination_4.o(element_3);
        }
      }
      var currentPath = joinToString(destination_4, '.');
      var tmp_2 = sdPaths.v(currentPath);
      var tmp_3;
      // Inline function 'kotlin.collections.isNotEmpty' call
      if (!element_2.v1().x()) {
        tmp_3 = doGenerateSDMap(Companion_getInstance_2(), element_2.v1(), decoyMode, decoys, sdPaths, currentPath);
      } else {
        tmp_3 = null;
      }
      var tmp$ret$24 = new SDField(tmp_2, tmp_3);
      destination_3.r1(tmp_1, tmp$ret$24);
    }
    return toSDMap(destination_3, decoyMode, decoys);
  }
  function regenerateSDField($this, sd, value, digestedDisclosure) {
    var tmp;
    if (value instanceof JsonObject) {
      tmp = $this.r1g(get_jsonObject(value), digestedDisclosure);
    } else {
      tmp = null;
    }
    return new SDField(sd, tmp);
  }
  function Companion_2() {
    Companion_instance_3 = this;
    var tmp = this;
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp.j1e_1 = [new LinkedHashMapSerializer(StringSerializer_getInstance(), $serializer_getInstance()), Companion_getInstance().f1e(), null];
  }
  protoOf(Companion_2).s1g = function (fullPayload, undisclosedPayload, decoyMode, decoys) {
    // Inline function 'kotlin.collections.mapValues' call
    // Inline function 'kotlin.collections.mapValuesTo' call
    var destination = LinkedHashMap_init_$Create$_0(mapCapacity(fullPayload.u()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator = fullPayload.t1().r();
    while (tmp0_iterator.s()) {
      var element = tmp0_iterator.t();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp = element.u1();
      // Inline function 'id.walt.sdjwt.Companion.generateSDMap.<anonymous>' call
      var tmp_0;
      if (!undisclosedPayload.yw(element.u1())) {
        tmp_0 = new SDField(true);
      } else {
        var tmp_1;
        var tmp_2 = element.v1();
        if (tmp_2 instanceof JsonObject) {
          var tmp_3 = undisclosedPayload.e8(element.u1());
          tmp_1 = tmp_3 instanceof JsonObject;
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          tmp_0 = new SDField(false, Companion_getInstance_2().s1g(get_jsonObject(element.v1()), get_jsonObject(ensureNotNull(undisclosedPayload.e8(element.u1()))), decoyMode, decoys));
        } else {
          tmp_0 = new SDField(false);
        }
      }
      var tmp$ret$1 = tmp_0;
      destination.r1(tmp, tmp$ret$1);
    }
    return toSDMap(destination, decoyMode, decoys);
  };
  protoOf(Companion_2).t1g = function (jsonPaths, decoyMode, decoys) {
    return doGenerateSDMap(this, jsonPaths, decoyMode, decoys, toSet(jsonPaths), '');
  };
  protoOf(Companion_2).r1g = function (undisclosedPayload, digestedDisclosures) {
    Companion_getInstance_1();
    var tmp0_safe_receiver = undisclosedPayload.e8('_sd');
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonArray(tmp0_safe_receiver);
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.collections.filter' call
      // Inline function 'kotlin.collections.filterTo' call
      var destination = ArrayList_init_$Create$_0();
      var tmp0_iterator = tmp1_safe_receiver.r();
      while (tmp0_iterator.s()) {
        var element = tmp0_iterator.t();
        // Inline function 'id.walt.sdjwt.Companion.regenerateSDMap.<anonymous>' call
        if (digestedDisclosures.y1(get_jsonPrimitive(element).zw())) {
          destination.o(element);
        }
      }
      tmp = destination;
    }
    var tmp2_safe_receiver = tmp;
    var tmp_0;
    if (tmp2_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var destination_0 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp2_safe_receiver, 10));
      var tmp0_iterator_0 = tmp2_safe_receiver.r();
      while (tmp0_iterator_0.s()) {
        var item = tmp0_iterator_0.t();
        // Inline function 'id.walt.sdjwt.Companion.regenerateSDMap.<anonymous>' call
        var tmp$ret$3 = ensureNotNull(digestedDisclosures.b2(get_jsonPrimitive(item).zw()));
        destination_0.o(tmp$ret$3);
      }
      tmp_0 = destination_0;
    }
    var tmp3_safe_receiver = tmp_0;
    var tmp_1;
    if (tmp3_safe_receiver == null) {
      tmp_1 = null;
    } else {
      // Inline function 'kotlin.collections.associateBy' call
      var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(tmp3_safe_receiver, 10)), 16);
      // Inline function 'kotlin.collections.associateByTo' call
      var destination_1 = LinkedHashMap_init_$Create$_0(capacity);
      var tmp0_iterator_1 = tmp3_safe_receiver.r();
      while (tmp0_iterator_1.s()) {
        var element_0 = tmp0_iterator_1.t();
        // Inline function 'id.walt.sdjwt.Companion.regenerateSDMap.<anonymous>' call
        var tmp_2 = element_0.key;
        // Inline function 'id.walt.sdjwt.Companion.regenerateSDMap.<anonymous>' call
        var tmp$ret$7 = regenerateSDField(Companion_getInstance_2(), true, element_0.value, digestedDisclosures);
        destination_1.r1(tmp_2, tmp$ret$7);
      }
      tmp_1 = destination_1;
    }
    var tmp4_elvis_lhs = tmp_1;
    var tmp_3;
    if (tmp4_elvis_lhs == null) {
      // Inline function 'kotlin.collections.mapOf' call
      tmp_3 = emptyMap();
    } else {
      tmp_3 = tmp4_elvis_lhs;
    }
    var tmp_4 = tmp_3;
    // Inline function 'kotlin.collections.mapValues' call
    // Inline function 'kotlin.collections.filterNot' call
    // Inline function 'kotlin.collections.filterNotTo' call
    var destination_2 = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_2 = undisclosedPayload.t1().r();
    while (tmp0_iterator_2.s()) {
      var element_1 = tmp0_iterator_2.t();
      // Inline function 'id.walt.sdjwt.Companion.regenerateSDMap.<anonymous>' call
      var tmp_5 = element_1.u1();
      Companion_getInstance_1();
      if (!(tmp_5 === '_sd')) {
        destination_2.r1(element_1.u1(), element_1.v1());
      }
    }
    // Inline function 'kotlin.collections.mapValuesTo' call
    var destination_3 = LinkedHashMap_init_$Create$_0(mapCapacity(destination_2.u()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator_3 = destination_2.t1().r();
    while (tmp0_iterator_3.s()) {
      var element_2 = tmp0_iterator_3.t();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp_6 = element_2.u1();
      // Inline function 'id.walt.sdjwt.Companion.regenerateSDMap.<anonymous>' call
      var tmp$ret$16 = regenerateSDField(Companion_getInstance_2(), false, element_2.v1(), digestedDisclosures);
      destination_3.r1(tmp_6, tmp$ret$16);
    }
    return toSDMap(plus_0(tmp_4, destination_3));
  };
  protoOf(Companion_2).k1e = function (json) {
    println('Parsing SDMap from: ' + json);
    var tmp0_safe_receiver = json.e8('fields');
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonObject(tmp0_safe_receiver);
    var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.t1();
    var tmp;
    if (tmp2_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.collections.associate' call
      var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(tmp2_safe_receiver, 10)), 16);
      // Inline function 'kotlin.collections.associateTo' call
      var destination = LinkedHashMap_init_$Create$_0(capacity);
      var tmp0_iterator = tmp2_safe_receiver.r();
      while (tmp0_iterator.s()) {
        var element = tmp0_iterator.t();
        // Inline function 'kotlin.collections.plusAssign' call
        // Inline function 'id.walt.sdjwt.Companion.fromJSON.<anonymous>' call
        var pair = new Pair(element.u1(), Companion_instance_1.e1e(element.v1()));
        destination.r1(pair.md_1, pair.nd_1);
      }
      tmp = destination;
    }
    var tmp3_elvis_lhs = tmp;
    var tmp_0;
    if (tmp3_elvis_lhs == null) {
      // Inline function 'kotlin.collections.mapOf' call
      tmp_0 = emptyMap();
    } else {
      tmp_0 = tmp3_elvis_lhs;
    }
    var tmp_1 = tmp_0;
    var tmp4_safe_receiver = json.e8('decoyMode');
    var tmp_2;
    if (tmp4_safe_receiver == null) {
      tmp_2 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'id.walt.sdjwt.Companion.fromJSON.<anonymous>' call
      tmp_2 = Companion_getInstance().e1e(tmp4_safe_receiver);
    }
    var tmp5_elvis_lhs = tmp_2;
    var tmp_3 = tmp5_elvis_lhs == null ? DecoyMode_NONE_getInstance() : tmp5_elvis_lhs;
    var tmp6_safe_receiver = json.e8('decoys');
    var tmp7_safe_receiver = tmp6_safe_receiver == null ? null : get_jsonPrimitive(tmp6_safe_receiver);
    var tmp8_elvis_lhs = tmp7_safe_receiver == null ? null : get_int(tmp7_safe_receiver);
    return new SDMap(tmp_1, tmp_3, tmp8_elvis_lhs == null ? 0 : tmp8_elvis_lhs);
  };
  protoOf(Companion_2).u1g = function (json) {
    return this.k1e(get_jsonObject(Default_getInstance().tv(json)));
  };
  var Companion_instance_3;
  function Companion_getInstance_2() {
    if (Companion_instance_3 == null)
      new Companion_2();
    return Companion_instance_3;
  }
  function $serializer_0() {
    $serializer_instance_0 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('id.walt.sdjwt.SDMap', this, 3);
    tmp0_serialDesc.cp('fields', false);
    tmp0_serialDesc.cp('decoyMode', true);
    tmp0_serialDesc.cp('decoys', true);
    this.v1g_1 = tmp0_serialDesc;
  }
  protoOf($serializer_0).fi = function () {
    return this.v1g_1;
  };
  protoOf($serializer_0).rp = function () {
    var tmp0_cached = Companion_getInstance_2().j1e_1;
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return [tmp0_cached[0], tmp0_cached[1], IntSerializer_getInstance()];
  };
  protoOf($serializer_0).gi = function (decoder) {
    var tmp0_desc = this.v1g_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_input = decoder.rk(tmp0_desc);
    var tmp8_cached = Companion_getInstance_2().j1e_1;
    if (tmp7_input.gl()) {
      tmp4_local0 = tmp7_input.cl(tmp0_desc, 0, tmp8_cached[0], tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.cl(tmp0_desc, 1, tmp8_cached[1], tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.wk(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.hl(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.cl(tmp0_desc, 0, tmp8_cached[0], tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.cl(tmp0_desc, 1, tmp8_cached[1], tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.wk(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.sk(tmp0_desc);
    return SDMap_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  var $serializer_instance_0;
  function $serializer_getInstance_0() {
    if ($serializer_instance_0 == null)
      new $serializer_0();
    return $serializer_instance_0;
  }
  function SDMap_init_$Init$(seen1, fields, decoyMode, decoys, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1))) {
      throwMissingFieldException(seen1, 1, $serializer_getInstance_0().v1g_1);
    }
    $this.p1e_1 = fields;
    if (0 === (seen1 & 2))
      $this.q1e_1 = DecoyMode_NONE_getInstance();
    else
      $this.q1e_1 = decoyMode;
    if (0 === (seen1 & 4))
      $this.r1e_1 = 0;
    else
      $this.r1e_1 = decoys;
    return $this;
  }
  function SDMap_init_$Create$(seen1, fields, decoyMode, decoys, serializationConstructorMarker) {
    return SDMap_init_$Init$(seen1, fields, decoyMode, decoys, serializationConstructorMarker, objectCreate(protoOf(SDMap)));
  }
  function SDMap(fields, decoyMode, decoys) {
    Companion_getInstance_2();
    decoyMode = decoyMode === VOID ? DecoyMode_NONE_getInstance() : decoyMode;
    decoys = decoys === VOID ? 0 : decoys;
    this.p1e_1 = fields;
    this.q1e_1 = decoyMode;
    this.r1e_1 = decoys;
  }
  protoOf(SDMap).t1 = function () {
    return this.p1e_1.t1();
  };
  protoOf(SDMap).p1 = function () {
    return this.p1e_1.p1();
  };
  protoOf(SDMap).u = function () {
    return this.p1e_1.u();
  };
  protoOf(SDMap).q1 = function () {
    return this.p1e_1.q1();
  };
  protoOf(SDMap).x = function () {
    return this.p1e_1.x();
  };
  protoOf(SDMap).e8 = function (key) {
    return this.p1e_1.b2(key);
  };
  protoOf(SDMap).b2 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.e8((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  protoOf(SDMap).yw = function (key) {
    return this.p1e_1.y1(key);
  };
  protoOf(SDMap).y1 = function (key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.yw((!(key == null) ? typeof key === 'string' : false) ? key : THROW_CCE());
  };
  protoOf(SDMap).o1e = function () {
    // Inline function 'kotlinx.serialization.json.buildJsonObject' call
    // Inline function 'kotlin.contracts.contract' call
    var builder = new JsonObjectBuilder();
    // Inline function 'id.walt.sdjwt.SDMap.toJSON.<anonymous>' call
    // Inline function 'kotlinx.serialization.json.buildJsonObject' call
    // Inline function 'kotlin.contracts.contract' call
    var builder_0 = new JsonObjectBuilder();
    // Inline function 'id.walt.sdjwt.SDMap.toJSON.<anonymous>.<anonymous>' call
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = this.p1e_1.t1().r();
    while (tmp0_iterator.s()) {
      var element = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.SDMap.toJSON.<anonymous>.<anonymous>.<anonymous>' call
      builder_0.jx(element.u1(), element.v1().o1e());
    }
    var tmp$ret$1 = builder_0.kn();
    builder.jx('fields', tmp$ret$1);
    put_0(builder, 'decoyMode', this.q1e_1.s8_1);
    put_1(builder, 'decoys', this.r1e_1);
    return builder.kn();
  };
  function toSDMap(_this__u8e3s4, decoyMode, decoys) {
    decoyMode = decoyMode === VOID ? DecoyMode_NONE_getInstance() : decoyMode;
    decoys = decoys === VOID ? 0 : decoys;
    return new SDMap(_this__u8e3s4, decoyMode, decoys);
  }
  function digest($this, value) {
    var messageDigest = sha256(encodeToByteArray(value));
    return messageDigest.w13();
  }
  function generateSalt($this) {
    var randomness = Default_getInstance_0().oe(16);
    return Base64_getInstance().b14(randomness, true);
  }
  function generateDisclosure($this, key, value) {
    var salt = generateSalt($this);
    // Inline function 'kotlin.let' call
    var tmp = Base64_getInstance();
    // Inline function 'kotlinx.serialization.json.buildJsonArray' call
    // Inline function 'kotlin.contracts.contract' call
    var builder = new JsonArrayBuilder();
    // Inline function 'id.walt.sdjwt.Companion.generateDisclosure.<anonymous>' call
    add(builder, salt);
    add(builder, key);
    builder.lx(value);
    var tmp$ret$0 = builder.kn();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'id.walt.sdjwt.Companion.generateDisclosure.<anonymous>' call
    var disclosure = tmp.b14(encodeToByteArray(tmp$ret$0.toString()), true);
    return new SDisclosure(disclosure, salt, key, value);
  }
  function digestSDClaim($this, key, value, digests2disclosures) {
    var disclosure = generateDisclosure($this, key, value);
    // Inline function 'kotlin.also' call
    var this_0 = digest($this, disclosure.disclosure);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'id.walt.sdjwt.Companion.digestSDClaim.<anonymous>' call
    // Inline function 'kotlin.collections.set' call
    digests2disclosures.r1(this_0, disclosure);
    return this_0;
  }
  function removeSDFields($this, payload, sdMap) {
    // Inline function 'kotlin.collections.mapValues' call
    // Inline function 'kotlin.collections.filterKeys' call
    var result = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = payload.t1().r();
    while (tmp0_iterator.s()) {
      var entry = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.Companion.removeSDFields.<anonymous>' call
      var key = entry.u1();
      var tmp0_safe_receiver = sdMap.b2(key);
      if (!((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.sd) === true)) {
        result.r1(entry.u1(), entry.v1());
      }
    }
    // Inline function 'kotlin.collections.mapValuesTo' call
    var destination = LinkedHashMap_init_$Create$_0(mapCapacity(result.u()));
    // Inline function 'kotlin.collections.associateByTo' call
    var tmp0_iterator_0 = result.t1().r();
    while (tmp0_iterator_0.s()) {
      var element = tmp0_iterator_0.t();
      // Inline function 'kotlin.collections.mapValuesTo.<anonymous>' call
      var tmp = element.u1();
      // Inline function 'id.walt.sdjwt.Companion.removeSDFields.<anonymous>' call
      var tmp_0;
      var tmp_1;
      var tmp_2 = element.v1();
      if (tmp_2 instanceof JsonObject) {
        // Inline function 'kotlin.collections.isNullOrEmpty' call
        var tmp0_safe_receiver_0 = sdMap.b2(element.u1());
        var this_0 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.children;
        // Inline function 'kotlin.contracts.contract' call
        tmp_1 = !(this_0 == null ? true : this_0.x());
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        var tmp_3 = Companion_instance_4;
        var tmp_4 = get_jsonObject(element.v1());
        var tmp1_safe_receiver = sdMap.b2(element.u1());
        var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.children;
        var tmp_5;
        if (tmp2_elvis_lhs == null) {
          // Inline function 'kotlin.collections.mapOf' call
          tmp_5 = emptyMap();
        } else {
          tmp_5 = tmp2_elvis_lhs;
        }
        tmp_0 = removeSDFields(tmp_3, tmp_4, tmp_5);
      } else {
        tmp_0 = element.v1();
      }
      var tmp$ret$6 = tmp_0;
      destination.r1(tmp, tmp$ret$6);
    }
    return new JsonObject(destination);
  }
  function generateSDPayload($this, payload, sdMap, digests2disclosures) {
    var sdPayload = toMutableMap(removeSDFields($this, payload, sdMap));
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.filterKeys' call
    var result = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = payload.t1().r();
    while (tmp0_iterator.s()) {
      var entry = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.Companion.generateSDPayload.<anonymous>' call
      var key = entry.u1();
      var tmp;
      var tmp0_safe_receiver = sdMap.e8(key);
      if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.sd) === true) {
        tmp = true;
      } else {
        // Inline function 'kotlin.collections.isNullOrEmpty' call
        var tmp1_safe_receiver = sdMap.e8(key);
        var this_0 = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.children;
        // Inline function 'kotlin.contracts.contract' call
        tmp = !(this_0 == null ? true : this_0.x());
      }
      if (tmp) {
        result.r1(entry.u1(), entry.v1());
      }
    }
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$(result.u());
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_0 = result.t1().r();
    while (tmp0_iterator_0.s()) {
      var item = tmp0_iterator_0.t();
      // Inline function 'id.walt.sdjwt.Companion.generateSDPayload.<anonymous>' call
      var tmp_0;
      var tmp_1;
      var tmp_2 = item.v1();
      if (!(tmp_2 instanceof JsonObject)) {
        tmp_1 = true;
      } else {
        // Inline function 'kotlin.collections.isNullOrEmpty' call
        var tmp0_safe_receiver_0 = sdMap.e8(item.u1());
        var this_1 = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.children;
        // Inline function 'kotlin.contracts.contract' call
        tmp_1 = this_1 == null ? true : this_1.x();
      }
      if (tmp_1) {
        tmp_0 = digestSDClaim(Companion_instance_4, item.u1(), item.v1(), digests2disclosures);
      } else {
        var nestedSDPayload = generateSDPayload(Companion_instance_4, get_jsonObject(item.v1()), ensureNotNull(ensureNotNull(sdMap.e8(item.u1())).children), digests2disclosures);
        var tmp_3;
        var tmp1_safe_receiver_0 = sdMap.e8(item.u1());
        if ((tmp1_safe_receiver_0 == null ? null : tmp1_safe_receiver_0.sd) === true) {
          tmp_3 = digestSDClaim(Companion_instance_4, item.u1(), nestedSDPayload, digests2disclosures);
        } else {
          // Inline function 'kotlin.collections.set' call
          var key_0 = item.u1();
          sdPayload.r1(key_0, nestedSDPayload);
          tmp_3 = null;
        }
        tmp_0 = tmp_3;
      }
      var tmp$ret$6 = tmp_0;
      destination.o(tmp$ret$6);
    }
    var digests = toSet(filterNotNull(destination));
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!digests.x()) {
      Companion_getInstance_1();
      // Inline function 'kotlinx.serialization.json.buildJsonArray' call
      // Inline function 'kotlin.contracts.contract' call
      var builder = new JsonArrayBuilder();
      // Inline function 'id.walt.sdjwt.Companion.generateSDPayload.<anonymous>' call
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_iterator_1 = digests.r();
      while (tmp0_iterator_1.s()) {
        var element = tmp0_iterator_1.t();
        // Inline function 'id.walt.sdjwt.Companion.generateSDPayload.<anonymous>.<anonymous>' call
        add(builder, element);
      }
      if (!sdMap.q1e_1.equals(DecoyMode_NONE_getInstance()) ? sdMap.r1e_1 > 0 : false) {
        var numDecoys;
        switch (sdMap.q1e_1.t8_1) {
          case 2:
            numDecoys = numberToInt(SecureRandom_getInstance().ne(1.0, sdMap.r1e_1 + 1.0));
            break;
          case 1:
            numDecoys = sdMap.r1e_1;
            break;
          default:
            numDecoys = 0;
            break;
        }
        // Inline function 'kotlin.repeat' call
        var times = numDecoys;
        // Inline function 'kotlin.contracts.contract' call
        var inductionVariable = 0;
        if (inductionVariable < times)
          do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            // Inline function 'id.walt.sdjwt.Companion.generateSDPayload.<anonymous>.<anonymous>' call
            add(builder, digest(Companion_instance_4, generateSalt(Companion_instance_4)));
          }
           while (inductionVariable < times);
      }
      var tmp$ret$10 = builder.kn();
      sdPayload.r1('_sd', tmp$ret$10);
    }
    return new JsonObject(sdPayload);
  }
  function disclosePayloadRecursively($this, payload, verificationDisclosureMap) {
    // Inline function 'kotlinx.serialization.json.buildJsonObject' call
    // Inline function 'kotlin.contracts.contract' call
    var builder = new JsonObjectBuilder();
    // Inline function 'id.walt.sdjwt.SDPayload.disclosePayloadRecursively.<anonymous>' call
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = payload.t1().r();
    while (tmp0_iterator.s()) {
      var element = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.SDPayload.disclosePayloadRecursively.<anonymous>.<anonymous>' call
      var tmp = element.u1();
      Companion_getInstance_1();
      if (tmp === '_sd') {
        var tmp_0 = element.v1();
        if (!(tmp_0 instanceof JsonArray)) {
          Companion_getInstance_1();
          throw Exception_init_$Create$('SD-JWT contains invalid ' + '_sd' + ' element');
        }
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator_0 = get_jsonArray(element.v1()).r();
        while (tmp0_iterator_0.s()) {
          var element_0 = tmp0_iterator_0.t();
          // Inline function 'id.walt.sdjwt.SDPayload.disclosePayloadRecursively.<anonymous>.<anonymous>.<anonymous>' call
          unveilDisclosureIfPresent($this, get_jsonPrimitive(element_0).zw(), builder, verificationDisclosureMap);
        }
      } else {
        var tmp_1 = element.v1();
        if (tmp_1 instanceof JsonObject) {
          builder.jx(element.u1(), disclosePayloadRecursively($this, get_jsonObject(element.v1()), verificationDisclosureMap));
        } else {
          builder.jx(element.u1(), element.v1());
        }
      }
    }
    return builder.kn();
  }
  function unveilDisclosureIfPresent($this, digest, objectBuilder, verificationDisclosureMap) {
    var tmp1_elvis_lhs = verificationDisclosureMap == null ? null : verificationDisclosureMap.s1(digest);
    var sDisclosure = tmp1_elvis_lhs == null ? $this.digestedDisclosures.b2(digest) : tmp1_elvis_lhs;
    if (!(sDisclosure == null)) {
      var tmp;
      var tmp_0 = sDisclosure.value;
      if (tmp_0 instanceof JsonObject) {
        tmp = disclosePayloadRecursively($this, get_jsonObject(sDisclosure.value), verificationDisclosureMap);
      } else {
        tmp = sDisclosure.value;
      }
      objectBuilder.jx(sDisclosure.key, tmp);
    }
  }
  function filterDisclosures($this, currPayloadObject, sdMap) {
    var tmp;
    Companion_getInstance_1();
    if (currPayloadObject.yw('_sd')) {
      Companion_getInstance_1();
      var tmp_0 = currPayloadObject.e8('_sd');
      tmp = !(tmp_0 instanceof JsonArray);
    } else {
      tmp = false;
    }
    if (tmp) {
      Companion_getInstance_1();
      throw Exception_init_$Create$('Invalid ' + '_sd' + ' format found');
    }
    // Inline function 'kotlin.collections.flatMap' call
    // Inline function 'kotlin.collections.filter' call
    // Inline function 'kotlin.collections.filterTo' call
    var destination = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = currPayloadObject.t1().r();
    while (tmp0_iterator.s()) {
      var element = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.SDPayload.filterDisclosures.<anonymous>' call
      var tmp_1;
      var tmp_2 = element.v1();
      if (tmp_2 instanceof JsonObject) {
        // Inline function 'kotlin.collections.isNullOrEmpty' call
        var tmp0_safe_receiver = sdMap.b2(element.u1());
        var this_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.children;
        // Inline function 'kotlin.contracts.contract' call
        tmp_1 = !(this_0 == null ? true : this_0.x());
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        destination.r1(element.u1(), element.v1());
      }
    }
    // Inline function 'kotlin.collections.flatMapTo' call
    var destination_0 = ArrayList_init_$Create$_0();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_0 = destination.t1().r();
    while (tmp0_iterator_0.s()) {
      var element_0 = tmp0_iterator_0.t();
      // Inline function 'id.walt.sdjwt.SDPayload.filterDisclosures.<anonymous>' call
      var list = filterDisclosures($this, get_jsonObject(element_0.v1()), ensureNotNull(ensureNotNull(sdMap.b2(element_0.u1())).children));
      addAll(destination_0, list);
    }
    var tmp_3 = destination_0;
    Companion_getInstance_1();
    var tmp0_safe_receiver_0 = currPayloadObject.e8('_sd');
    var tmp1_safe_receiver = tmp0_safe_receiver_0 == null ? null : get_jsonArray(tmp0_safe_receiver_0);
    var tmp_4;
    if (tmp1_safe_receiver == null) {
      tmp_4 = null;
    } else {
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var destination_1 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp1_safe_receiver, 10));
      var tmp0_iterator_1 = tmp1_safe_receiver.r();
      while (tmp0_iterator_1.s()) {
        var item = tmp0_iterator_1.t();
        // Inline function 'id.walt.sdjwt.SDPayload.filterDisclosures.<anonymous>' call
        var tmp$ret$9 = get_jsonPrimitive(item).zw();
        destination_1.o(tmp$ret$9);
      }
      tmp_4 = destination_1;
    }
    var tmp2_safe_receiver = tmp_4;
    var tmp_5;
    if (tmp2_safe_receiver == null) {
      tmp_5 = null;
    } else {
      // Inline function 'kotlin.collections.filter' call
      // Inline function 'kotlin.collections.filterTo' call
      var destination_2 = ArrayList_init_$Create$_0();
      var tmp0_iterator_2 = tmp2_safe_receiver.r();
      while (tmp0_iterator_2.s()) {
        var element_1 = tmp0_iterator_2.t();
        // Inline function 'id.walt.sdjwt.SDPayload.filterDisclosures.<anonymous>' call
        if ($this.digestedDisclosures.y1(element_1)) {
          destination_2.o(element_1);
        }
      }
      tmp_5 = destination_2;
    }
    var tmp3_safe_receiver = tmp_5;
    var tmp_6;
    if (tmp3_safe_receiver == null) {
      tmp_6 = null;
    } else {
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var destination_3 = ArrayList_init_$Create$(collectionSizeOrDefault(tmp3_safe_receiver, 10));
      var tmp0_iterator_3 = tmp3_safe_receiver.r();
      while (tmp0_iterator_3.s()) {
        var item_0 = tmp0_iterator_3.t();
        // Inline function 'id.walt.sdjwt.SDPayload.filterDisclosures.<anonymous>' call
        var tmp$ret$15 = ensureNotNull($this.digestedDisclosures.b2(item_0));
        destination_3.o(tmp$ret$15);
      }
      tmp_6 = destination_3;
    }
    var tmp4_safe_receiver = tmp_6;
    var tmp_7;
    if (tmp4_safe_receiver == null) {
      tmp_7 = null;
    } else {
      // Inline function 'kotlin.collections.filter' call
      // Inline function 'kotlin.collections.filterTo' call
      var destination_4 = ArrayList_init_$Create$_0();
      var tmp0_iterator_4 = tmp4_safe_receiver.r();
      while (tmp0_iterator_4.s()) {
        var element_2 = tmp0_iterator_4.t();
        // Inline function 'id.walt.sdjwt.SDPayload.filterDisclosures.<anonymous>' call
        var tmp0_safe_receiver_1 = sdMap.b2(element_2.key);
        if ((tmp0_safe_receiver_1 == null ? null : tmp0_safe_receiver_1.sd) === true) {
          destination_4.o(element_2);
        }
      }
      tmp_7 = destination_4;
    }
    var tmp5_safe_receiver = tmp_7;
    var tmp_8;
    if (tmp5_safe_receiver == null) {
      tmp_8 = null;
    } else {
      // Inline function 'kotlin.collections.flatMap' call
      // Inline function 'kotlin.collections.flatMapTo' call
      var destination_5 = ArrayList_init_$Create$_0();
      var tmp0_iterator_5 = tmp5_safe_receiver.r();
      while (tmp0_iterator_5.s()) {
        var element_3 = tmp0_iterator_5.t();
        // Inline function 'id.walt.sdjwt.SDPayload.filterDisclosures.<anonymous>' call
        var tmp_9 = listOf(element_3.disclosure);
        var tmp_10;
        var tmp_11;
        var tmp_12 = element_3.value;
        if (tmp_12 instanceof JsonObject) {
          // Inline function 'kotlin.collections.isNullOrEmpty' call
          var tmp0_safe_receiver_2 = sdMap.b2(element_3.key);
          var this_1 = tmp0_safe_receiver_2 == null ? null : tmp0_safe_receiver_2.children;
          // Inline function 'kotlin.contracts.contract' call
          tmp_11 = !(this_1 == null ? true : this_1.x());
        } else {
          tmp_11 = false;
        }
        if (tmp_11) {
          tmp_10 = filterDisclosures($this, element_3.value, ensureNotNull(ensureNotNull(sdMap.b2(element_3.key)).children));
        } else {
          // Inline function 'kotlin.collections.listOf' call
          tmp_10 = emptyList();
        }
        var list_0 = plus(tmp_9, tmp_10);
        addAll(destination_5, list_0);
      }
      tmp_8 = destination_5;
    }
    var tmp6_elvis_lhs = tmp_8;
    var tmp_13;
    if (tmp6_elvis_lhs == null) {
      // Inline function 'kotlin.collections.listOf' call
      tmp_13 = emptyList();
    } else {
      tmp_13 = tmp6_elvis_lhs;
    }
    return toSet(plus(tmp_3, tmp_13));
  }
  function Companion_3() {
  }
  protoOf(Companion_3).w1g = function (fullPayload, disclosureMap) {
    // Inline function 'kotlin.collections.mutableMapOf' call
    var digestedDisclosures = LinkedHashMap_init_$Create$();
    return new SDPayload(generateSDPayload(this, fullPayload, disclosureMap, digestedDisclosures), digestedDisclosures);
  };
  protoOf(Companion_3).x1g = function (fullPayload, undisclosedPayload, decoyMode, decoys) {
    return this.w1g(fullPayload, Companion_getInstance_2().s1g(fullPayload, undisclosedPayload, decoyMode, decoys));
  };
  protoOf(Companion_3).y1g = function (fullPayload, undisclosedPayload, decoyMode, decoys, $super) {
    decoyMode = decoyMode === VOID ? DecoyMode_NONE_getInstance() : decoyMode;
    decoys = decoys === VOID ? 0 : decoys;
    return $super === VOID ? this.x1g(fullPayload, undisclosedPayload, decoyMode, decoys) : $super.x1g.call(this, fullPayload, undisclosedPayload, decoyMode, decoys);
  };
  protoOf(Companion_3).k1f = function (jwtBody, disclosures) {
    var tmp = get_jsonObject(Default_getInstance().tv(decodeToString(Base64_getInstance().n15(jwtBody, true))));
    // Inline function 'kotlin.collections.associate' call
    var capacity = coerceAtLeast(mapCapacity(collectionSizeOrDefault(disclosures, 10)), 16);
    // Inline function 'kotlin.collections.associateTo' call
    var destination = LinkedHashMap_init_$Create$_0(capacity);
    var tmp0_iterator = disclosures.r();
    while (tmp0_iterator.s()) {
      var element = tmp0_iterator.t();
      // Inline function 'kotlin.collections.plusAssign' call
      // Inline function 'id.walt.sdjwt.Companion.parse.<anonymous>' call
      var pair = new Pair(digest(Companion_instance_4, element), Companion_instance_5.parse(element));
      destination.r1(pair.md_1, pair.nd_1);
    }
    return new SDPayload(tmp, destination);
  };
  var Companion_instance_4;
  function Companion_getInstance_3() {
    return Companion_instance_4;
  }
  function SDPayload(undisclosedPayload, digestedDisclosures) {
    var tmp;
    if (digestedDisclosures === VOID) {
      // Inline function 'kotlin.collections.mapOf' call
      tmp = emptyMap();
    } else {
      tmp = digestedDisclosures;
    }
    digestedDisclosures = tmp;
    this.undisclosedPayload = undisclosedPayload;
    this.digestedDisclosures = digestedDisclosures;
  }
  protoOf(SDPayload).z1g = function () {
    return this.undisclosedPayload;
  };
  protoOf(SDPayload).a1h = function () {
    return this.digestedDisclosures;
  };
  protoOf(SDPayload).b1h = function () {
    return this.digestedDisclosures.q1();
  };
  protoOf(SDPayload).c1h = function () {
    return disclosePayloadRecursively(this, this.undisclosedPayload, null);
  };
  protoOf(SDPayload).d1h = function () {
    return Companion_getInstance_2().r1g(this.undisclosedPayload, this.digestedDisclosures);
  };
  protoOf(SDPayload).withSelectiveDisclosures = function (sdMap) {
    var selectedDisclosures = filterDisclosures(this, this.undisclosedPayload, sdMap);
    // Inline function 'kotlin.collections.filterValues' call
    var this_0 = this.digestedDisclosures;
    var result = LinkedHashMap_init_$Create$();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = this_0.t1().r();
    while (tmp0_iterator.s()) {
      var entry = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.SDPayload.withSelectiveDisclosures.<anonymous>' call
      var it = entry.v1();
      if (selectedDisclosures.v(it.disclosure)) {
        result.r1(entry.u1(), entry.v1());
      }
    }
    return new SDPayload(this.undisclosedPayload, result);
  };
  protoOf(SDPayload).withoutDisclosures = function () {
    // Inline function 'kotlin.collections.mapOf' call
    var tmp$ret$0 = emptyMap();
    return new SDPayload(this.undisclosedPayload, tmp$ret$0);
  };
  protoOf(SDPayload).verifyDisclosures = function () {
    // Inline function 'kotlin.also' call
    var this_0 = toMutableMap(this.digestedDisclosures);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'id.walt.sdjwt.SDPayload.verifyDisclosures.<anonymous>' call
    disclosePayloadRecursively(this, this.undisclosedPayload, this_0);
    return this_0.x();
  };
  protoOf(SDPayload).od = function () {
    return this.undisclosedPayload;
  };
  protoOf(SDPayload).pd = function () {
    return this.digestedDisclosures;
  };
  protoOf(SDPayload).e1h = function (undisclosedPayload, digestedDisclosures) {
    return new SDPayload(undisclosedPayload, digestedDisclosures);
  };
  protoOf(SDPayload).copy = function (undisclosedPayload, digestedDisclosures, $super) {
    undisclosedPayload = undisclosedPayload === VOID ? this.undisclosedPayload : undisclosedPayload;
    digestedDisclosures = digestedDisclosures === VOID ? this.digestedDisclosures : digestedDisclosures;
    return this.e1h(undisclosedPayload, digestedDisclosures);
  };
  protoOf(SDPayload).toString = function () {
    return 'SDPayload(undisclosedPayload=' + this.undisclosedPayload + ', digestedDisclosures=' + this.digestedDisclosures + ')';
  };
  protoOf(SDPayload).hashCode = function () {
    var result = this.undisclosedPayload.hashCode();
    result = imul(result, 31) + hashCode(this.digestedDisclosures) | 0;
    return result;
  };
  protoOf(SDPayload).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SDPayload))
      return false;
    var tmp0_other_with_cast = other instanceof SDPayload ? other : THROW_CCE();
    if (!this.undisclosedPayload.equals(tmp0_other_with_cast.undisclosedPayload))
      return false;
    if (!equals(this.digestedDisclosures, tmp0_other_with_cast.digestedDisclosures))
      return false;
    return true;
  };
  function Companion_4() {
  }
  protoOf(Companion_4).parse = function (disclosure) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'id.walt.sdjwt.Companion.parse.<anonymous>' call
    var it = get_jsonArray(Default_getInstance().tv(decodeToString(Base64_getInstance().n15(disclosure, true))));
    if (!(it.u() === 3)) {
      throw Exception_init_$Create$('Invalid selective disclosure');
    }
    return new SDisclosure(disclosure, get_jsonPrimitive(it.b1(0)).zw(), get_jsonPrimitive(it.b1(1)).zw(), it.b1(2));
  };
  var Companion_instance_5;
  function Companion_getInstance_4() {
    return Companion_instance_5;
  }
  function SDisclosure(disclosure, salt, key, value) {
    this.disclosure = disclosure;
    this.salt = salt;
    this.key = key;
    this.value = value;
  }
  protoOf(SDisclosure).f1h = function () {
    return this.disclosure;
  };
  protoOf(SDisclosure).g1h = function () {
    return this.salt;
  };
  protoOf(SDisclosure).u1 = function () {
    return this.key;
  };
  protoOf(SDisclosure).v1 = function () {
    return this.value;
  };
  protoOf(SDisclosure).od = function () {
    return this.disclosure;
  };
  protoOf(SDisclosure).pd = function () {
    return this.salt;
  };
  protoOf(SDisclosure).h1h = function () {
    return this.key;
  };
  protoOf(SDisclosure).i1h = function () {
    return this.value;
  };
  protoOf(SDisclosure).j1h = function (disclosure, salt, key, value) {
    return new SDisclosure(disclosure, salt, key, value);
  };
  protoOf(SDisclosure).copy = function (disclosure, salt, key, value, $super) {
    disclosure = disclosure === VOID ? this.disclosure : disclosure;
    salt = salt === VOID ? this.salt : salt;
    key = key === VOID ? this.key : key;
    value = value === VOID ? this.value : value;
    return this.j1h(disclosure, salt, key, value);
  };
  protoOf(SDisclosure).toString = function () {
    return 'SDisclosure(disclosure=' + this.disclosure + ', salt=' + this.salt + ', key=' + this.key + ', value=' + this.value + ')';
  };
  protoOf(SDisclosure).hashCode = function () {
    var result = getStringHashCode(this.disclosure);
    result = imul(result, 31) + getStringHashCode(this.salt) | 0;
    result = imul(result, 31) + getStringHashCode(this.key) | 0;
    result = imul(result, 31) + hashCode(this.value) | 0;
    return result;
  };
  protoOf(SDisclosure).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof SDisclosure))
      return false;
    var tmp0_other_with_cast = other instanceof SDisclosure ? other : THROW_CCE();
    if (!(this.disclosure === tmp0_other_with_cast.disclosure))
      return false;
    if (!(this.salt === tmp0_other_with_cast.salt))
      return false;
    if (!(this.key === tmp0_other_with_cast.key))
      return false;
    if (!equals(this.value, tmp0_other_with_cast.value))
      return false;
    return true;
  };
  function JwtVerificationResult(verified, message) {
    message = message === VOID ? null : message;
    this.verified = verified;
    this.message = message;
  }
  protoOf(JwtVerificationResult).k1h = function () {
    return this.verified;
  };
  protoOf(JwtVerificationResult).y5 = function () {
    return this.message;
  };
  protoOf(JwtVerificationResult).od = function () {
    return this.verified;
  };
  protoOf(JwtVerificationResult).pd = function () {
    return this.message;
  };
  protoOf(JwtVerificationResult).l1h = function (verified, message) {
    return new JwtVerificationResult(verified, message);
  };
  protoOf(JwtVerificationResult).copy = function (verified, message, $super) {
    verified = verified === VOID ? this.verified : verified;
    message = message === VOID ? this.message : message;
    return this.l1h(verified, message);
  };
  protoOf(JwtVerificationResult).toString = function () {
    return 'JwtVerificationResult(verified=' + this.verified + ', message=' + this.message + ')';
  };
  protoOf(JwtVerificationResult).hashCode = function () {
    var result = getBooleanHashCode(this.verified);
    result = imul(result, 31) + (this.message == null ? 0 : getStringHashCode(this.message)) | 0;
    return result;
  };
  protoOf(JwtVerificationResult).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof JwtVerificationResult))
      return false;
    var tmp0_other_with_cast = other instanceof JwtVerificationResult ? other : THROW_CCE();
    if (!(this.verified === tmp0_other_with_cast.verified))
      return false;
    if (!(this.message == tmp0_other_with_cast.message))
      return false;
    return true;
  };
  function VerificationResult(sdJwt, signatureVerified, disclosuresVerified, message) {
    message = message === VOID ? null : message;
    this.sdJwt = sdJwt;
    this.signatureVerified = signatureVerified;
    this.disclosuresVerified = disclosuresVerified;
    this.message = message;
  }
  protoOf(VerificationResult).m1h = function () {
    return this.sdJwt;
  };
  protoOf(VerificationResult).n1h = function () {
    return this.signatureVerified;
  };
  protoOf(VerificationResult).o1h = function () {
    return this.disclosuresVerified;
  };
  protoOf(VerificationResult).y5 = function () {
    return this.message;
  };
  protoOf(VerificationResult).k1h = function () {
    return this.signatureVerified ? this.disclosuresVerified : false;
  };
  protoOf(VerificationResult).od = function () {
    return this.sdJwt;
  };
  protoOf(VerificationResult).pd = function () {
    return this.signatureVerified;
  };
  protoOf(VerificationResult).h1h = function () {
    return this.disclosuresVerified;
  };
  protoOf(VerificationResult).i1h = function () {
    return this.message;
  };
  protoOf(VerificationResult).p1h = function (sdJwt, signatureVerified, disclosuresVerified, message) {
    return new VerificationResult(sdJwt, signatureVerified, disclosuresVerified, message);
  };
  protoOf(VerificationResult).copy = function (sdJwt, signatureVerified, disclosuresVerified, message, $super) {
    sdJwt = sdJwt === VOID ? this.sdJwt : sdJwt;
    signatureVerified = signatureVerified === VOID ? this.signatureVerified : signatureVerified;
    disclosuresVerified = disclosuresVerified === VOID ? this.disclosuresVerified : disclosuresVerified;
    message = message === VOID ? this.message : message;
    return this.p1h(sdJwt, signatureVerified, disclosuresVerified, message);
  };
  protoOf(VerificationResult).toString = function () {
    return 'VerificationResult(sdJwt=' + this.sdJwt + ', signatureVerified=' + this.signatureVerified + ', disclosuresVerified=' + this.disclosuresVerified + ', message=' + this.message + ')';
  };
  protoOf(VerificationResult).hashCode = function () {
    var result = hashCode(this.sdJwt);
    result = imul(result, 31) + getBooleanHashCode(this.signatureVerified) | 0;
    result = imul(result, 31) + getBooleanHashCode(this.disclosuresVerified) | 0;
    result = imul(result, 31) + (this.message == null ? 0 : getStringHashCode(this.message)) | 0;
    return result;
  };
  protoOf(VerificationResult).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof VerificationResult))
      return false;
    var tmp0_other_with_cast = other instanceof VerificationResult ? other : THROW_CCE();
    if (!equals(this.sdJwt, tmp0_other_with_cast.sdJwt))
      return false;
    if (!(this.signatureVerified === tmp0_other_with_cast.signatureVerified))
      return false;
    if (!(this.disclosuresVerified === tmp0_other_with_cast.disclosuresVerified))
      return false;
    if (!(this.message == tmp0_other_with_cast.message))
      return false;
    return true;
  };
  function JSAsyncJWTCryptoProvider() {
  }
  function SDJwtJS$Companion$verifyAndParseAsync$slambda($sdJwt, $jwtCryptoProvider, resultContinuation) {
    this.y1h_1 = $sdJwt;
    this.z1h_1 = $jwtCryptoProvider;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SDJwtJS$Companion$verifyAndParseAsync$slambda).b1i = function ($this$promise, $completion) {
    var tmp = this.c1i($this$promise, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(SDJwtJS$Companion$verifyAndParseAsync$slambda).fc = function (p1, $completion) {
    return this.b1i((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SDJwtJS$Companion$verifyAndParseAsync$slambda).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        switch (tmp) {
          case 0:
            this.wa_1 = 2;
            this.va_1 = 1;
            suspendResult = Companion_getInstance_1().l1f(this.y1h_1, this.z1h_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var it = suspendResult;
            return new VerificationResult(new SDJwtJS(it.sdJwt), it.signatureVerified, it.disclosuresVerified, it.message);
          case 2:
            throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.wa_1 === 2) {
          throw e;
        } else {
          this.va_1 = this.wa_1;
          this.ya_1 = e;
        }
      }
     while (true);
  };
  protoOf(SDJwtJS$Companion$verifyAndParseAsync$slambda).c1i = function ($this$promise, completion) {
    var i = new SDJwtJS$Companion$verifyAndParseAsync$slambda(this.y1h_1, this.z1h_1, completion);
    i.a1i_1 = $this$promise;
    return i;
  };
  function SDJwtJS$Companion$verifyAndParseAsync$slambda_0($sdJwt, $jwtCryptoProvider, resultContinuation) {
    var i = new SDJwtJS$Companion$verifyAndParseAsync$slambda($sdJwt, $jwtCryptoProvider, resultContinuation);
    var l = function ($this$promise, $completion) {
      return i.b1i($this$promise, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function SDJwtJS$Companion$signAsync$slambda($sdPayload, $jwtCryptoProvider, resultContinuation) {
    this.l1i_1 = $sdPayload;
    this.m1i_1 = $jwtCryptoProvider;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SDJwtJS$Companion$signAsync$slambda).o1i = function ($this$promise, $completion) {
    var tmp = this.c1i($this$promise, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(SDJwtJS$Companion$signAsync$slambda).fc = function (p1, $completion) {
    return this.o1i((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SDJwtJS$Companion$signAsync$slambda).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        switch (tmp) {
          case 0:
            this.wa_1 = 2;
            this.va_1 = 1;
            suspendResult = Companion_getInstance_1().q1f(this.l1i_1, this.m1i_1, VOID, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            return new SDJwtJS(ARGUMENT);
          case 2:
            throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.wa_1 === 2) {
          throw e;
        } else {
          this.va_1 = this.wa_1;
          this.ya_1 = e;
        }
      }
     while (true);
  };
  protoOf(SDJwtJS$Companion$signAsync$slambda).c1i = function ($this$promise, completion) {
    var i = new SDJwtJS$Companion$signAsync$slambda(this.l1i_1, this.m1i_1, completion);
    i.n1i_1 = $this$promise;
    return i;
  };
  function SDJwtJS$Companion$signAsync$slambda_0($sdPayload, $jwtCryptoProvider, resultContinuation) {
    var i = new SDJwtJS$Companion$signAsync$slambda($sdPayload, $jwtCryptoProvider, resultContinuation);
    var l = function ($this$promise, $completion) {
      return i.o1i($this$promise, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function Companion_5() {
  }
  protoOf(Companion_5).verifyAndParseAsync = function (sdJwt, jwtCryptoProvider) {
    var tmp = GlobalScope_instance;
    return promise(tmp, VOID, VOID, SDJwtJS$Companion$verifyAndParseAsync$slambda_0(sdJwt, jwtCryptoProvider, null));
  };
  protoOf(Companion_5).p1i = function (sdPayload, jwtCryptoProvider, keyID, withHolderJwt) {
    var tmp = GlobalScope_instance;
    return promise(tmp, VOID, VOID, SDJwtJS$Companion$signAsync$slambda_0(sdPayload, jwtCryptoProvider, null));
  };
  protoOf(Companion_5).signAsync = function (sdPayload, jwtCryptoProvider, keyID, withHolderJwt, $super) {
    keyID = keyID === VOID ? null : keyID;
    withHolderJwt = withHolderJwt === VOID ? null : withHolderJwt;
    return this.p1i(sdPayload, jwtCryptoProvider, keyID, withHolderJwt);
  };
  var Companion_instance_6;
  function Companion_getInstance_5() {
    return Companion_instance_6;
  }
  function SDJwtJS$verifyAsyncJs$slambda(this$0, $jwtCryptoProvider, resultContinuation) {
    this.y1i_1 = this$0;
    this.z1i_1 = $jwtCryptoProvider;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SDJwtJS$verifyAsyncJs$slambda).b1i = function ($this$promise, $completion) {
    var tmp = this.c1i($this$promise, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(SDJwtJS$verifyAsyncJs$slambda).fc = function (p1, $completion) {
    return this.b1i((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SDJwtJS$verifyAsyncJs$slambda).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        switch (tmp) {
          case 0:
            this.wa_1 = 2;
            this.va_1 = 1;
            suspendResult = this.y1i_1.m1f(this.z1i_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var it = suspendResult;
            return new VerificationResult(new SDJwtJS(it.sdJwt), it.signatureVerified, it.disclosuresVerified, it.message);
          case 2:
            throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.wa_1 === 2) {
          throw e;
        } else {
          this.va_1 = this.wa_1;
          this.ya_1 = e;
        }
      }
     while (true);
  };
  protoOf(SDJwtJS$verifyAsyncJs$slambda).c1i = function ($this$promise, completion) {
    var i = new SDJwtJS$verifyAsyncJs$slambda(this.y1i_1, this.z1i_1, completion);
    i.a1j_1 = $this$promise;
    return i;
  };
  function SDJwtJS$verifyAsyncJs$slambda_0(this$0, $jwtCryptoProvider, resultContinuation) {
    var i = new SDJwtJS$verifyAsyncJs$slambda(this$0, $jwtCryptoProvider, resultContinuation);
    var l = function ($this$promise, $completion) {
      return i.b1i($this$promise, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function SDJwtJS$presentAllAsync$slambda(this$0, $discloseAll, $withHolderJwt, resultContinuation) {
    this.j1j_1 = this$0;
    this.k1j_1 = $discloseAll;
    this.l1j_1 = $withHolderJwt;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SDJwtJS$presentAllAsync$slambda).o1i = function ($this$promise, $completion) {
    var tmp = this.c1i($this$promise, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(SDJwtJS$presentAllAsync$slambda).fc = function (p1, $completion) {
    return this.o1i((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SDJwtJS$presentAllAsync$slambda).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        if (tmp === 0) {
          this.wa_1 = 1;
          return new SDJwtJS(this.j1j_1.presentAll(this.k1j_1, this.l1j_1));
        } else if (tmp === 1) {
          throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  };
  protoOf(SDJwtJS$presentAllAsync$slambda).c1i = function ($this$promise, completion) {
    var i = new SDJwtJS$presentAllAsync$slambda(this.j1j_1, this.k1j_1, this.l1j_1, completion);
    i.m1j_1 = $this$promise;
    return i;
  };
  function SDJwtJS$presentAllAsync$slambda_0(this$0, $discloseAll, $withHolderJwt, resultContinuation) {
    var i = new SDJwtJS$presentAllAsync$slambda(this$0, $discloseAll, $withHolderJwt, resultContinuation);
    var l = function ($this$promise, $completion) {
      return i.o1i($this$promise, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function SDJwtJS$presentAsync$slambda(this$0, $sdMap, $withHolderJwt, resultContinuation) {
    this.v1j_1 = this$0;
    this.w1j_1 = $sdMap;
    this.x1j_1 = $withHolderJwt;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SDJwtJS$presentAsync$slambda).o1i = function ($this$promise, $completion) {
    var tmp = this.c1i($this$promise, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(SDJwtJS$presentAsync$slambda).fc = function (p1, $completion) {
    return this.o1i((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SDJwtJS$presentAsync$slambda).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        if (tmp === 0) {
          this.wa_1 = 1;
          return new SDJwtJS(this.v1j_1.present(Companion_getInstance_2().u1g(JSON.stringify(this.w1j_1)), this.x1j_1));
        } else if (tmp === 1) {
          throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  };
  protoOf(SDJwtJS$presentAsync$slambda).c1i = function ($this$promise, completion) {
    var i = new SDJwtJS$presentAsync$slambda(this.v1j_1, this.w1j_1, this.x1j_1, completion);
    i.y1j_1 = $this$promise;
    return i;
  };
  function SDJwtJS$presentAsync$slambda_0(this$0, $sdMap, $withHolderJwt, resultContinuation) {
    var i = new SDJwtJS$presentAsync$slambda(this$0, $sdMap, $withHolderJwt, resultContinuation);
    var l = function ($this$promise, $completion) {
      return i.o1i($this$promise, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function SDJwtJS(sdJwt) {
    SDJwt_init_$Init$(sdJwt, this);
  }
  protoOf(SDJwtJS).z1j = function () {
    // Inline function 'kotlin.collections.toTypedArray' call
    // Inline function 'kotlin.collections.map' call
    var this_0 = this.sdPayload.sDisclosures;
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
    var tmp0_iterator = this_0.r();
    while (tmp0_iterator.s()) {
      var item = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.SDJwtJS.<get-disclosuresJS>.<anonymous>' call
      var tmp$ret$0 = item.disclosure;
      destination.o(tmp$ret$0);
    }
    return copyToArray(destination);
  };
  protoOf(SDJwtJS).a1k = function () {
    // Inline function 'kotlin.collections.toTypedArray' call
    // Inline function 'kotlin.collections.map' call
    var this_0 = this.sdPayload.sDisclosures;
    // Inline function 'kotlin.collections.mapTo' call
    var destination = ArrayList_init_$Create$(collectionSizeOrDefault(this_0, 10));
    var tmp0_iterator = this_0.r();
    while (tmp0_iterator.s()) {
      var item = tmp0_iterator.t();
      // Inline function 'id.walt.sdjwt.SDJwtJS.<get-disclosureObjectsJS>.<anonymous>' call
      var tmp = JSON;
      // Inline function 'kotlinx.serialization.json.buildJsonObject' call
      // Inline function 'kotlin.contracts.contract' call
      var builder = new JsonObjectBuilder();
      // Inline function 'id.walt.sdjwt.SDJwtJS.<get-disclosureObjectsJS>.<anonymous>.<anonymous>' call
      put_0(builder, 'disclosure', item.disclosure);
      put_0(builder, 'salt', item.salt);
      put_0(builder, 'key', item.key);
      builder.jx('value', item.value);
      var tmp$ret$0 = builder.kn();
      var tmp$ret$1 = tmp.parse(tmp$ret$0.toString());
      destination.o(tmp$ret$1);
    }
    return copyToArray(destination);
  };
  protoOf(SDJwtJS).z1g = function () {
    return JSON.parse(this.sdPayload.undisclosedPayload.toString());
  };
  protoOf(SDJwtJS).c1h = function () {
    return JSON.parse(this.sdPayload.fullPayload.toString());
  };
  protoOf(SDJwtJS).d1h = function () {
    return JSON.parse(this.sdPayload.sdMap.o1e().toString());
  };
  protoOf(SDJwtJS).verifyAsync = function (jwtCryptoProvider) {
    var tmp = GlobalScope_instance;
    return promise(tmp, VOID, VOID, SDJwtJS$verifyAsyncJs$slambda_0(this, jwtCryptoProvider, null));
  };
  protoOf(SDJwtJS).b1k = function (discloseAll, withHolderJwt) {
    var tmp = GlobalScope_instance;
    return promise(tmp, VOID, VOID, SDJwtJS$presentAllAsync$slambda_0(this, discloseAll, withHolderJwt, null));
  };
  protoOf(SDJwtJS).presentAllAsync = function (discloseAll, withHolderJwt, $super) {
    withHolderJwt = withHolderJwt === VOID ? null : withHolderJwt;
    return this.b1k(discloseAll, withHolderJwt);
  };
  protoOf(SDJwtJS).c1k = function (sdMap, withHolderJwt) {
    var tmp = GlobalScope_instance;
    return promise(tmp, VOID, VOID, SDJwtJS$presentAsync$slambda_0(this, sdMap, withHolderJwt, null));
  };
  protoOf(SDJwtJS).presentAsync = function (sdMap, withHolderJwt, $super) {
    withHolderJwt = withHolderJwt === VOID ? null : withHolderJwt;
    return this.c1k(sdMap, withHolderJwt);
  };
  protoOf(SDJwtJS).toFormattedString = function (formatForPresentation) {
    println('Formatting SD_JWT: ' + joinToString_0(this.disclosures, ','));
    var tmp = plus_1(listOf(this.jwt), this.disclosures);
    var tmp0_safe_receiver = this.holderJwt;
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'id.walt.sdjwt.SDJwtJS.toString.<anonymous>' call
      tmp_0 = listOf(tmp0_safe_receiver);
    }
    var tmp1_elvis_lhs = tmp_0;
    var tmp_1;
    if (tmp1_elvis_lhs == null) {
      var tmp_2;
      if (formatForPresentation) {
        tmp_2 = listOf('');
      } else {
        // Inline function 'kotlin.collections.listOf' call
        tmp_2 = emptyList();
      }
      tmp_1 = tmp_2;
    } else {
      tmp_1 = tmp1_elvis_lhs;
    }
    var tmp_3 = plus(tmp, tmp_1);
    Companion_getInstance_1();
    return joinToString(tmp_3, '~');
  };
  function SDMapBuilder(decoyMode, numDecoys) {
    decoyMode = decoyMode === VOID ? 'NONE' : decoyMode;
    numDecoys = numDecoys === VOID ? 0 : numDecoys;
    this.d1k_1 = decoyMode;
    this.e1k_1 = numDecoys;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.f1k_1 = LinkedHashMap_init_$Create$();
  }
  protoOf(SDMapBuilder).g1k = function (key, sd, children) {
    var tmp;
    if (children != null) {
      tmp = Companion_getInstance_2().u1g(JSON.stringify(children));
    } else {
      tmp = null;
    }
    var childrenSdMap = tmp;
    // Inline function 'kotlin.collections.set' call
    var this_0 = this.f1k_1;
    var value = new SDField(sd, childrenSdMap);
    this_0.r1(key, value);
    return this;
  };
  protoOf(SDMapBuilder).addField = function (key, sd, children, $super) {
    children = children === VOID ? null : children;
    return this.g1k(key, sd, children);
  };
  protoOf(SDMapBuilder).build = function () {
    return JSON.parse((new SDMap(this.f1k_1, valueOf(this.d1k_1), this.e1k_1)).o1e().toString());
  };
  protoOf(SDMapBuilder).buildFromJsonPaths = function (jsonPaths) {
    return JSON.parse(Companion_getInstance_2().t1g(toList(jsonPaths), valueOf(this.d1k_1), this.e1k_1).o1e().toString());
  };
  function SDPayloadBuilder(fullPayload) {
    this.fullPayload = fullPayload;
  }
  protoOf(SDPayloadBuilder).c1h = function () {
    return this.fullPayload;
  };
  protoOf(SDPayloadBuilder).buildForUndisclosedPayload = function (undisclosedSDPayload) {
    return Companion_instance_4.y1g(get_jsonObject(Default_getInstance().tv(JSON.stringify(this.fullPayload))), get_jsonObject(Default_getInstance().tv(JSON.stringify(undisclosedSDPayload))));
  };
  protoOf(SDPayloadBuilder).buildForSDMap = function (sdMap) {
    return Companion_instance_4.w1g(get_jsonObject(Default_getInstance().tv(JSON.stringify(this.fullPayload))), Companion_getInstance_2().u1g(JSON.stringify(sdMap)));
  };
  function SimpleAsyncJWTCryptoProvider$sign$lambda($continuation) {
    return function (it) {
      console.log('SIGNED');
      // Inline function 'kotlin.coroutines.resume' call
      var this_0 = $continuation;
      // Inline function 'kotlin.Companion.success' call
      var tmp$ret$0 = _Result___init__impl__xyqfz8(it);
      this_0.v5(tmp$ret$0);
      return Unit_instance;
    };
  }
  function SimpleAsyncJWTCryptoProvider$sign$lambda_0(it) {
    console.log('ERROR SIGNING', it.message);
    return Unit_instance;
  }
  function SimpleAsyncJWTCryptoProvider$verify$lambda($continuation) {
    return function (it) {
      console.log('Verified.');
      // Inline function 'kotlin.coroutines.resume' call
      var this_0 = $continuation;
      // Inline function 'kotlin.Companion.success' call
      var value = new JwtVerificationResult(true);
      var tmp$ret$0 = _Result___init__impl__xyqfz8(value);
      this_0.v5(tmp$ret$0);
      return Unit_instance;
    };
  }
  function SimpleAsyncJWTCryptoProvider$verify$lambda_0($continuation) {
    return function (it) {
      console.log('Verification failed: ' + it.message);
      // Inline function 'kotlin.coroutines.resume' call
      var this_0 = $continuation;
      // Inline function 'kotlin.Companion.success' call
      var value = new JwtVerificationResult(false, it.message);
      var tmp$ret$0 = _Result___init__impl__xyqfz8(value);
      this_0.v5(tmp$ret$0);
      return Unit_instance;
    };
  }
  function SimpleAsyncJWTCryptoProvider$signAsync$slambda(this$0, $payload, $keyID, resultContinuation) {
    this.p1k_1 = this$0;
    this.q1k_1 = $payload;
    this.r1k_1 = $keyID;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SimpleAsyncJWTCryptoProvider$signAsync$slambda).t1k = function ($this$promise, $completion) {
    var tmp = this.c1i($this$promise, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(SimpleAsyncJWTCryptoProvider$signAsync$slambda).fc = function (p1, $completion) {
    return this.t1k((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SimpleAsyncJWTCryptoProvider$signAsync$slambda).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        switch (tmp) {
          case 0:
            this.wa_1 = 2;
            this.va_1 = 1;
            suspendResult = this.p1k_1.a1e(get_jsonObject(Default_getInstance().tv(JSON.stringify(this.q1k_1))), this.r1k_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.wa_1 === 2) {
          throw e;
        } else {
          this.va_1 = this.wa_1;
          this.ya_1 = e;
        }
      }
     while (true);
  };
  protoOf(SimpleAsyncJWTCryptoProvider$signAsync$slambda).c1i = function ($this$promise, completion) {
    var i = new SimpleAsyncJWTCryptoProvider$signAsync$slambda(this.p1k_1, this.q1k_1, this.r1k_1, completion);
    i.s1k_1 = $this$promise;
    return i;
  };
  function SimpleAsyncJWTCryptoProvider$signAsync$slambda_0(this$0, $payload, $keyID, resultContinuation) {
    var i = new SimpleAsyncJWTCryptoProvider$signAsync$slambda(this$0, $payload, $keyID, resultContinuation);
    var l = function ($this$promise, $completion) {
      return i.t1k($this$promise, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function SimpleAsyncJWTCryptoProvider$verifyAsync$slambda(this$0, $jwt, resultContinuation) {
    this.f1l_1 = this$0;
    this.g1l_1 = $jwt;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(SimpleAsyncJWTCryptoProvider$verifyAsync$slambda).i1l = function ($this$promise, $completion) {
    var tmp = this.c1i($this$promise, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(SimpleAsyncJWTCryptoProvider$verifyAsync$slambda).fc = function (p1, $completion) {
    return this.i1l((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(SimpleAsyncJWTCryptoProvider$verifyAsync$slambda).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        switch (tmp) {
          case 0:
            this.wa_1 = 2;
            this.va_1 = 1;
            suspendResult = this.f1l_1.c1e(this.g1l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.wa_1 === 2) {
          throw e;
        } else {
          this.va_1 = this.wa_1;
          this.ya_1 = e;
        }
      }
     while (true);
  };
  protoOf(SimpleAsyncJWTCryptoProvider$verifyAsync$slambda).c1i = function ($this$promise, completion) {
    var i = new SimpleAsyncJWTCryptoProvider$verifyAsync$slambda(this.f1l_1, this.g1l_1, completion);
    i.h1l_1 = $this$promise;
    return i;
  };
  function SimpleAsyncJWTCryptoProvider$verifyAsync$slambda_0(this$0, $jwt, resultContinuation) {
    var i = new SimpleAsyncJWTCryptoProvider$verifyAsync$slambda(this$0, $jwt, resultContinuation);
    var l = function ($this$promise, $completion) {
      return i.i1l($this$promise, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function $signCOROUTINE$2(_this__u8e3s4, payload, keyID, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.r1l_1 = _this__u8e3s4;
    this.s1l_1 = payload;
    this.t1l_1 = keyID;
  }
  protoOf($signCOROUTINE$2).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        switch (tmp) {
          case 0:
            this.wa_1 = 2;
            this.va_1 = 1;
            var safe = SafeContinuation_init_$Create$(intercepted(this));
            console.log('SIGNING', this.s1l_1.toString());
            var tmp_0 = new jose.SignJWT(JSON.parse(this.s1l_1.toString()));
            var builder = new JsonObjectBuilder();
            put_0(builder, 'alg', this.r1l_1.u1k_1);
            put_0(builder, 'typ', 'JWT');
            var tmp0_safe_receiver = this.t1l_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              put_0(builder, 'kid', tmp0_safe_receiver);
            }

            var it = builder.kn();
            var tmp_1 = tmp_0.setProtectedHeader(JSON.parse(it.toString())).sign(this.r1l_1.v1k_1, this.r1l_1.w1k_1);
            var tmp_2 = SimpleAsyncJWTCryptoProvider$sign$lambda(safe);
            tmp_1.then(tmp_2, SimpleAsyncJWTCryptoProvider$sign$lambda_0);
            suspendResult = returnIfSuspended(safe.w5(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.wa_1 === 2) {
          throw e;
        } else {
          this.va_1 = this.wa_1;
          this.ya_1 = e;
        }
      }
     while (true);
  };
  protoOf($signCOROUTINE$2)['<set-state>'] = protoOf($signCOROUTINE$2).eb;
  protoOf($signCOROUTINE$2)['<get-state>'] = protoOf($signCOROUTINE$2).fb;
  protoOf($signCOROUTINE$2)['<set-exceptionState>'] = protoOf($signCOROUTINE$2).gb;
  protoOf($signCOROUTINE$2)['<get-exceptionState>'] = protoOf($signCOROUTINE$2).hb;
  protoOf($signCOROUTINE$2)['<set-result>'] = protoOf($signCOROUTINE$2).ib;
  protoOf($signCOROUTINE$2)['<get-result>'] = protoOf($signCOROUTINE$2).jb;
  protoOf($signCOROUTINE$2)['<set-exception>'] = protoOf($signCOROUTINE$2).kb;
  protoOf($signCOROUTINE$2)['<get-exception>'] = protoOf($signCOROUTINE$2).lb;
  protoOf($signCOROUTINE$2)['<set-finallyPath>'] = protoOf($signCOROUTINE$2).mb;
  protoOf($signCOROUTINE$2)['<get-finallyPath>'] = protoOf($signCOROUTINE$2).nb;
  protoOf($signCOROUTINE$2)['<get-context>'] = protoOf($signCOROUTINE$2).u5;
  function $verifyCOROUTINE$3(_this__u8e3s4, jwt, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.c1m_1 = _this__u8e3s4;
    this.d1m_1 = jwt;
  }
  protoOf($verifyCOROUTINE$3).rb = function () {
    var suspendResult = this.xa_1;
    $sm: do
      try {
        var tmp = this.va_1;
        switch (tmp) {
          case 0:
            this.wa_1 = 2;
            this.va_1 = 1;
            var safe = SafeContinuation_init_$Create$(intercepted(this));
            console.log('Verifying JWT: ' + this.d1m_1);
            var tmp_0 = jose;
            var tmp0_elvis_lhs = this.c1m_1.w1k_1;
            var tmp_1 = tmp_0.jwtVerify(this.d1m_1, this.c1m_1.v1k_1, tmp0_elvis_lhs == null ? {} : tmp0_elvis_lhs);
            var tmp_2 = SimpleAsyncJWTCryptoProvider$verify$lambda(safe);
            tmp_1.then(tmp_2, SimpleAsyncJWTCryptoProvider$verify$lambda_0(safe));
            suspendResult = returnIfSuspended(safe.w5(), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.ya_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.wa_1 === 2) {
          throw e;
        } else {
          this.va_1 = this.wa_1;
          this.ya_1 = e;
        }
      }
     while (true);
  };
  protoOf($verifyCOROUTINE$3)['<set-state>'] = protoOf($verifyCOROUTINE$3).eb;
  protoOf($verifyCOROUTINE$3)['<get-state>'] = protoOf($verifyCOROUTINE$3).fb;
  protoOf($verifyCOROUTINE$3)['<set-exceptionState>'] = protoOf($verifyCOROUTINE$3).gb;
  protoOf($verifyCOROUTINE$3)['<get-exceptionState>'] = protoOf($verifyCOROUTINE$3).hb;
  protoOf($verifyCOROUTINE$3)['<set-result>'] = protoOf($verifyCOROUTINE$3).ib;
  protoOf($verifyCOROUTINE$3)['<get-result>'] = protoOf($verifyCOROUTINE$3).jb;
  protoOf($verifyCOROUTINE$3)['<set-exception>'] = protoOf($verifyCOROUTINE$3).kb;
  protoOf($verifyCOROUTINE$3)['<get-exception>'] = protoOf($verifyCOROUTINE$3).lb;
  protoOf($verifyCOROUTINE$3)['<set-finallyPath>'] = protoOf($verifyCOROUTINE$3).mb;
  protoOf($verifyCOROUTINE$3)['<get-finallyPath>'] = protoOf($verifyCOROUTINE$3).nb;
  protoOf($verifyCOROUTINE$3)['<get-context>'] = protoOf($verifyCOROUTINE$3).u5;
  function SimpleAsyncJWTCryptoProvider(algorithm, keyParam, options) {
    this.u1k_1 = algorithm;
    this.v1k_1 = keyParam;
    this.w1k_1 = options;
  }
  protoOf(SimpleAsyncJWTCryptoProvider).a1e = function (payload, keyID, $completion) {
    var tmp = new $signCOROUTINE$2(this, payload, keyID, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(SimpleAsyncJWTCryptoProvider).c1e = function (jwt, $completion) {
    var tmp = new $verifyCOROUTINE$3(this, jwt, $completion);
    tmp.xa_1 = Unit_instance;
    tmp.ya_1 = null;
    return tmp.rb();
  };
  protoOf(SimpleAsyncJWTCryptoProvider).signAsync = function (payload, keyID) {
    var tmp = GlobalScope_instance;
    return promise(tmp, VOID, VOID, SimpleAsyncJWTCryptoProvider$signAsync$slambda_0(this, payload, keyID, null));
  };
  protoOf(SimpleAsyncJWTCryptoProvider).verifyAsync = function (jwt) {
    var tmp = GlobalScope_instance;
    return promise(tmp, VOID, VOID, SimpleAsyncJWTCryptoProvider$verifyAsync$slambda_0(this, jwt, null));
  };
  //region block: post-declaration
  defineProp(protoOf(DecoyMode), 'name', protoOf(DecoyMode).u9);
  defineProp(protoOf(DecoyMode), 'ordinal', protoOf(DecoyMode).v9);
  protoOf($serializer).sp = typeParametersSerializers;
  defineProp(protoOf(SDJwt), 'zzz_unused_disclosures', protoOf(SDJwt).g1g);
  defineProp(protoOf(SDJwt), 'zzz_unused_disclosureObjects', protoOf(SDJwt).h1g);
  defineProp(protoOf(SDJwt), 'zzz_unused_undisclosedPayload', protoOf(SDJwt).i1g);
  defineProp(protoOf(SDJwt), 'zzz_unused_fullPayload', protoOf(SDJwt).j1g);
  defineProp(protoOf(SDJwt), 'zzz_unused_digestedDisclosures', protoOf(SDJwt).k1g);
  defineProp(protoOf(SDJwt), 'zzz_unused_sdMap', protoOf(SDJwt).l1g);
  defineProp(protoOf(SDJwt), 'algorithm', protoOf(SDJwt).m1g);
  defineProp(protoOf(SDJwt), 'keyID', protoOf(SDJwt).n1g);
  defineProp(protoOf(SDJwt), 'jwk', protoOf(SDJwt).o1g);
  protoOf($serializer_0).sp = typeParametersSerializers;
  defineProp(protoOf(SDPayload), 'sDisclosures', protoOf(SDPayload).b1h);
  defineProp(protoOf(SDPayload), 'fullPayload', protoOf(SDPayload).c1h);
  defineProp(protoOf(SDPayload), 'sdMap', protoOf(SDPayload).d1h);
  defineProp(protoOf(VerificationResult), 'verified', protoOf(VerificationResult).k1h);
  defineProp(protoOf(SDJwtJS), 'disclosures', protoOf(SDJwtJS).z1j);
  defineProp(protoOf(SDJwtJS), 'disclosureObjects', protoOf(SDJwtJS).a1k);
  defineProp(protoOf(SDJwtJS), 'undisclosedPayload', protoOf(SDJwtJS).z1g);
  defineProp(protoOf(SDJwtJS), 'fullPayload', protoOf(SDJwtJS).c1h);
  defineProp(protoOf(SDJwtJS), 'sdMap', protoOf(SDJwtJS).d1h);
  protoOf(SimpleAsyncJWTCryptoProvider).b1e = sign$default;
  //endregion
  //region block: init
  Companion_instance_1 = new Companion_0();
  Companion_instance_4 = new Companion_3();
  Companion_instance_5 = new Companion_4();
  Companion_instance_6 = new Companion_5();
  //endregion
  //region block: exports
  function $jsExportAll$(_) {
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.DecoyMode = DecoyMode;
    $id$walt$sdjwt.DecoyMode.values = values;
    $id$walt$sdjwt.DecoyMode.valueOf = valueOf;
    defineProp($id$walt$sdjwt.DecoyMode, 'NONE', DecoyMode_NONE_getInstance);
    defineProp($id$walt$sdjwt.DecoyMode, 'FIXED', DecoyMode_FIXED_getInstance);
    defineProp($id$walt$sdjwt.DecoyMode, 'RANDOM', DecoyMode_RANDOM_getInstance);
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.SDField = SDField;
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.SDJwt = SDJwt;
    defineProp($id$walt$sdjwt.SDJwt, 'Companion', Companion_getInstance_1);
    Companion_1.prototype.$signAsyncCOROUTINE$1 = $signAsyncCOROUTINE$1;
    $id$walt$sdjwt.SDJwt.$verifyAsyncCOROUTINE$0 = $verifyAsyncCOROUTINE$0;
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.SDPayload = SDPayload;
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.SDisclosure = SDisclosure;
    defineProp($id$walt$sdjwt.SDisclosure, 'Companion', Companion_getInstance_4);
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.JwtVerificationResult = JwtVerificationResult;
    $id$walt$sdjwt.VerificationResult = VerificationResult;
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.SDJwtJS = SDJwtJS;
    defineProp($id$walt$sdjwt.SDJwtJS, 'Companion', Companion_getInstance_5);
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.SDMapBuilder = SDMapBuilder;
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.SDPayloadBuilder = SDPayloadBuilder;
    var $id = _.id || (_.id = {});
    var $id$walt = $id.walt || ($id.walt = {});
    var $id$walt$sdjwt = $id$walt.sdjwt || ($id$walt.sdjwt = {});
    $id$walt$sdjwt.SimpleAsyncJWTCryptoProvider = SimpleAsyncJWTCryptoProvider;
    $id$walt$sdjwt.SimpleAsyncJWTCryptoProvider.$signCOROUTINE$2 = $signCOROUTINE$2;
    $id$walt$sdjwt.SimpleAsyncJWTCryptoProvider.$verifyCOROUTINE$3 = $verifyCOROUTINE$3;
  }
  $jsExportAll$(_);
  //endregion
  return _;
}));

//# sourceMappingURL=waltid-sd-jwt.js.map
